--/ ogse_metka.script /--
--/ GPS beacon module /--
--/ OGS Evolution Team 2015 /--
--/ version 1.0 (28/12/2015)/--

--/ Модуль GPS маячка (основан на наработках АМК) /--

function attach(sm)
	sm:subscribe({signal = "on_take",     fun = this.on_item_take})
	sm:subscribe({signal = "on_drop",     fun = this.on_item_drop})
	--sm:subscribe({signal = "on_key_down", fun = this.on_key_down})
end

--function on_key_down(key, bind)
--end

local setup_gps_beacon_wnd = nil

--local beakons={}

class "gps_drop_timer" (ogse_qt.quick_timer)
function gps_drop_timer:__init(gps_obj)
	self.gps_obj = gps_obj
	ASSERT(self.gps_obj, "[gps_drop_timer:__init] invalid object id - no online object found!")
end
function gps_drop_timer:condition()
	local parent = self.gps_obj:parent()
	if parent == nil then  -- если родителя нет, значит просто выкинули на землю
		level.start_stop_menu(setup_gps_beacon(self.gps_obj:id()), true) -- ставим метку
		return true 
	else -- в противном случае
		if not parent:alive() then -- если выложили в ящик или труп
			level.start_stop_menu(setup_gps_beacon(self.gps_obj:id()), true) -- ставм метку
			return true 
		elseif parent:id() ~= db.actor:id() then -- если отдали или продали живому персонажу
			return true -- то просто ничего не делаем
		end
	end
	return false -- оставшийся вариант - это "всё ещё находится у актора". Просто продолжаем ждать.
end

dropped_to_box = 0

function on_item_drop(obj, sobj)
	if sobj:section_name() == "amk_metka" then
		if dropped_to_box > 0 then 
			dropped_to_box = dropped_to_box - 1 
			return true
		end
		if trunk_inv.trunk_is_opened() then
			-- сбрасываем в багажник - метка на тачку
			local car = trunk_inv.get_car_nearby()
			gps_drop_timer(car):start()
		else
			-- просто бросаем
			gps_drop_timer(obj):start()
		end
		return true
	end
end

function on_item_take(obj, sobj)
	if sobj:section_name()=="amk_metka" then
		if trunk_inv.trunk_is_opened() then
			-- берем из багажника - метка на тачке
			local car = trunk_inv.get_car_nearby()
			if level.map_has_object_spot(car:id(), "red_location") == 1 then
				level_tasks.remove_location_by_id(car:id(), "red_location")
			end
		else
			-- просто с земли
			if level.map_has_object_spot(sobj.id, "red_location") == 1 then
				level_tasks.remove_location_by_id(sobj.id, "red_location")
			end
		end
		return true
	end
end

-- инициализация
class "setup_gps_beacon" (CUIScriptWnd)

function setup_gps_beacon:__init(gps_obj) super()
	self.gps_obj = gps_obj
	self:InitControls()
	self:InitCallBacks()
	setup_gps_beacon_wnd = self
	self:SetWindowName("gps_metka")
end

function setup_gps_beacon:__finalize() end

function setup_gps_beacon:InitControls()
	-- файл-описатель наших элементов
	local xml = CScriptXmlInit()
	xml:ParseFile("ui_dots_wnd.xml")
	xml:InitWindow("main", 0, self)

	-- видео на заднем плане
	xml:InitStatic("back_video", self)

	-- рамка
	xml:InitStatic("background", self)

	-- кнопки
	self:Register(xml:Init3tButton("caption", self),"caption")
	self.btn_set_gps = xml:Init3tButton("btn_set_gps", self)
	self:Register(self.btn_set_gps,"btn_set_gps")
	self.btn_set_gps:Enable(false)
	-- кнопка выхода
	self:Register(xml:Init3tButton("btn_quit", self),"btn_quit")
	self.edit_box = xml:InitEditBox("edit_box", self)
	self:Register(self.edit_box, "edit_box")

end

function setup_gps_beacon:InitCallBacks()
	-- тут интерактивные элементы, при определенном действии выполняется заданная ф-ия
	self:AddCallback("btn_set_gps", ui_events.BUTTON_CLICKED, self.set_gps, self)
	self:AddCallback("btn_quit", ui_events.BUTTON_CLICKED, self.on_quit, self)
end
function setup_gps_beacon:Update()
	CUIScriptWnd.Update(self)
	self.btn_set_gps:Enable(self.edit_box:GetText() ~= "")
end
function setup_gps_beacon:OnKeyboard(dik, keyboard_action)
	CUIScriptWnd.OnKeyboard(self,dik,keyboard_action)
	if keyboard_action == ui_events.WINDOW_KEY_PRESSED then
-- на выход повесим Esc
		if dik == DIK_keys.DIK_ESCAPE then
			self:set_gps()
		end
		if dik == DIK_keys.DIK_RETURN then
			if self.edit_box:GetText() ~= "" then
				self:on_quit()
			end
		end
	end
	return true
end

function setup_gps_beacon:set_gps()
	level_tasks.add_location_by_id(self.gps_obj,"red_location",self.edit_box:GetText())
	self:on_quit()
end

function setup_gps_beacon:on_quit()
	self:GetHolder():start_stop_menu (self,true)
	setup_gps_beacon_wnd = nil
end

