-- -*- mode: lua; coding: windows-1251-dos -*-

-- ухудшение зрения неписей ночью -- учитывает опыт непися и его "навык"
--------------------------- Copyright 2009 KamikaZze для OGSE -------------------------

function attach(sm)
	sm:subscribe({ signal = "on_npc_death", fun = this.on_death     })
	sm:subscribe({ signal = "on_npc_hit",   fun = this.on_hit       })
	sm:subscribe({ signal = "on_npc_spawn", fun = this.on_npc_spawn })
end

function on_npc_spawn( obj, binder )
  if not obj:alive() then return end
  local s = {
    [ "signal" ] = "on_npc_update." .. obj:id(),
    [ "fun"    ] = this.on_update,
	[ "queued" ] = true,
  }
  binder[ script_name() .. ".subscribed" ] = s
  ogse_signals.get_mgr():subscribe( s )
end

function on_death( obj )
  local binder = obj:binded_object()
  local s      = binder[ script_name() .. ".subscribed" ]
  if s then
    ogse_signals.get_mgr():unsubscribe( s )
    binder[ script_name() .. ".subscribed" ] = nil
  end
end

being_hit = {}

function on_hit( obj, amount, local_direction, who, bone_index )
  if who --[[and amount > 0.01]] then
    local hit_info = {
      timer = time_global() + 7000,
      id    = who:id(),
      dist  = obj:position():distance_to( who:position() )
    }
    being_hit[ obj:id() ] = hit_info

    check_night( obj )
  end
end

function on_update( obj )
  ogse_signals.get_mgr():reschedule( math.random(11500, 12500) )
  check_night( obj )
end

local range_normal = 120
local range_night_max = 75
local fov_normal = 120
local fov_in_danger = 150
local range_twilight = 
{
	["novice"] = 60,
	["experienced"] = 65,
	["veteran"] = 70,
	["master"] = 75,
}
local range_night = 
{
	["novice"] = 40,
	["experienced"] = 45,
	["veteran"] = 50,
	["master"] = 55,
}
local fov_night = 
{
	["novice"] = 90,
	["experienced"] = 95,
	["veteran"] = 100,
	["master"] = 110,
}

function check_night(npc)
	local htime = level.get_time_hours()
	if htime then
		local nid = npc:id()
		
		--if npc and npc:is_stalker() then
			if
				xr_companion.is_companion(nid)
				or npc:character_community() == "zombied"  
				--or npc:character_community() == "monolith"
			then
				return
			end
				
			local npc_name = npc:profile_name()
			if string.find(npc_name, "sniper") 
			or string.find(npc_name, "leader") 
			or string.find(npc_name, "commander") 
			then
				local range = npc:range()
				local fov = npc:fov()
				if (not npc:best_danger() and not npc:best_enemy() and not xrs_battle_ai.in_combat[nid]) then
					-- пока мы спокойны
					if htime <= 4 or htime >= 21 then
						-- ночь
						if range and range < range_normal then
							npc:set_range(range_normal)
						end					
					else
						-- день
						if range and range < (range_normal - 10) then
							npc:set_range(range_normal)
						end					
					end
				elseif npc:best_enemy() or (npc:best_enemy() and npc:best_danger()) or (being_hit[nid] and being_hit[nid].timer > time_global()) or xrs_battle_ai.in_combat[nid] then
					if htime <= 4 or htime >= 21 then	
						-- ночь
						if range and range < 95 then
							npc:set_range(range_normal*2)
						end
					else
						-- день
						if being_hit[nid] and being_hit[nid].timer > time_global() then
							if being_hit[nid].dist > range_normal then
								npc:set_range(being_hit[nid].dist * 1.1)
							else
								if range and range < range_normal then
									npc:set_range(range_normal)
								end
							end
						else
							if range and range < range_normal then
								npc:set_range(range_normal)
							end
						end
					end
				end
				return
			end

			local npc_rank = ranks.get_obj_rank_name(npc)
			if (not npc:best_danger() and not npc:best_enemy() and not xrs_battle_ai.in_combat[nid]) then
			-- пока мы спокойны
				if htime <= 4 or htime >= 21 then
					-- ночь
					local range = npc:range()
					local fov = npc:fov()
					if range and range >= range_normal then
						local _r = range_night[range]
						if _r then
							npc:set_range(_r)
						end
					end
					if fov and fov >= fov_normal then
						local _f = fov_night[range]
						if _f then
							npc:set_fov(_f)
						end
					end
				elseif (htime <= 6 and htime > 4) or (htime >= 19 and htime < 21) then	
					-- сумерки
					local range = npc:range()
					local fov = npc:fov()
					if range and range >= range_normal then
						local _r = range_twilight[range]
						if _r then
							npc:set_range(_r)
						end
					end
				else
					-- день
					local range = npc:range()
					local fov = npc:fov()
					if range and range < range_normal then
						npc:set_range(range_normal)
					end
					if fov and fov < fov_normal then
						npc:set_fov(fov_normal)
					end
				end
			elseif (npc:best_danger() and not npc:best_enemy() and not xrs_battle_ai.in_combat[nid]) then
			-- если мы напуганы увеличим угол обзора
			-- имитируя опасливое осматривание по сторонам
			-- и повышенную внимательность
				local range = npc:range()
				local fov = npc:fov()
				if fov and fov < fov_in_danger then
					npc:set_fov(fov_in_danger)
				end
			elseif npc:best_enemy() or (npc:best_enemy() and npc:best_danger()) or (being_hit[nid] and being_hit[nid].timer > time_global()) or xrs_battle_ai.in_combat[nid] then
			-- если мы заметили врага то увеличим и
			-- дальность обзора тоже, так как
			-- по сути нас уже заметили
				local range = npc:range()
				local fov = npc:fov()
				if htime <= 4 or htime >= 21 then
					-- ночь
					if range and range < range_night_max then
						npc:set_range(range_night_max)
					end
				else
					-- день
					if being_hit[nid] and being_hit[nid].timer > time_global() then
						if being_hit[nid].dist > range_normal then
							npc:set_range(being_hit[nid].dist * 1.1)
						else	
							if range and range < range_normal then
								npc:set_range(range_normal)
							end
						end					
					else
						if range and range < range_normal then
							npc:set_range(range_normal)
						end	
					end												
				end
				if fov and fov < fov_in_danger then
					npc:set_fov(fov_in_danger)
				end
			end
		--end
	end
end
