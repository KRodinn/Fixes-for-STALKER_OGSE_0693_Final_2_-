-------------------------------------------
-- ogse_mines_binder.script
-- Биндер мин OGSE 0.6.9.3
-- 2014 (c) KamikaZze, OGS Evolution Team
-------------------------------------------

function attach(sm)
	sm:subscribe({ signal = "on_storyline_start",	fun = this.set_gsc_mine })
	sm:subscribe({ signal = "on_hit",				fun = this.mine_remove })
	sm:subscribe({ signal = "on_npc_hit",			fun = this.mine_remove })
	sm:subscribe({ signal = "on_npc_death",			fun = this.mine_remove })
	sm:subscribe({ signal = "on_monster_hit",		fun = this.mine_remove })
	sm:subscribe({ signal = "on_monster_death",		fun = this.mine_remove })
end

local minefield_table = {} -- таблица для мин

--Вот это походу надо для того, чтобы в скрипте не учитывались никакие мины, кроме тех которые устанавливает актор.
--Походу из за бага со свечением после взрыва. Если когда-то этот движковый баг исправят, можно будет это убрать.
--Ну тогда и оптимизировать функцию mine_remove, т.к. из за большого кол-ва мин на локации она будет тормозить довольно сильно.
function set_gsc_mine()
	for i=1, 65534 do
		local sobj = alife():object(i)
		if sobj and sobj:section_name() == "zone_mine_field" then
			local pk = get_netpk(sobj, 1)
			ASSERT( pk:isOk(), "can't read netpacket of %s", sobj:name() )
			local data = pk:get()
			data.custom_data:set("gsc_mine")
			pk:set(data)
		end
	end
end

function mine_remove(victim)
	local radius = 2
	local vic_pos = victim:position()
	for _ ,id in pairs(minefield_table) do
		local mine = level.object_by_id(id)
		if mine then
			local mine_pos = mine:position()
			if vic_pos:distance_to(mine_pos) <= radius then
				checker_minefield.release_restrictor(id)
				minefield_table[id] = nil
				break
			end
		end
	end
end


function init(obj)
	local new_binder = mines_binder(obj)
	obj:bind_object(new_binder)
end

class "mines_binder" (object_binder)
function mines_binder:__init(obj) super(obj)
end 

function mines_binder:net_spawn(data)
	local id = self.object:id()
	local sobj = alife():object(id)

	local pk = get_netpk(sobj, 1)
	ASSERT( pk:isOk(), "can't read netpacket of %s", sobj:name() )
	local data = pk:get()
	if data.custom_data:getString() ~= "gsc_mine" then
		--log3("!![%s] Adding in minefield table: [%s], IsAnomaly: [%s]", script_name(), sobj:name(), IsAnomaly(sobj))
		minefield_table[id] = id
	end	
	return true
end
