--[=[
Взято отсюда: https://github.com/dsh2dsh/op2ogse/blob/97d19a126b59daac263c3d34f558f03ad5c1d883/gamedata/scripts/dsh_weight_control.script
По сути, это исправление движкового бага:
Движок считает, что все, что больше inventory.max_weight - это перегруз.
Независимо от того, сколько переносимого веса добавляет костюм.
Из за этого, неадекватно просчитываются параметры выносливости
и функции db.actor:get_actor_max_weight(), db.actor:get_actor_max_walk_weight()
ВСЕГДА возвращают дефолтные значения из конфигов.

Здесь сделано так, что переносимый вес костюма в движке обнуляется,
пересчитывается и устанавливается функциями set_actor_max_weight() и set_actor_max_walk_weight().
--]=]

function attach( sm )
  sm:subscribe({ signal = "on_drop",         fun = this.remove_outfit   })
  sm:subscribe({ signal = "on_item_to_ruck", fun = this.remove_outfit   })
  sm:subscribe({ signal = "on_item_to_slot", fun = this.use_outfit      })
  --sm:subscribe({ signal = "on_update",       fun = this.on_update       })
end


local function set_outfit_additional_inventory_weight( obj, val )
  obj:set_go_float( nil, val, 500 )
end
local function set_outfit_additional_inventory_weight2( obj, val )
  obj:set_go_float( nil, val, 504 )
end


local params_cache = {}
function get_outfit_params( sect )
  if not params_cache[ sect ] then
    local t = {}
    t.additional_inventory_weight  = get_float( sect, "additional_inventory_weight",  0 )
    t.additional_inventory_weight2 = get_float( sect, "additional_inventory_weight2", 0 )
    params_cache[ sect ] = t
  end
  return params_cache[ sect ]
end


function use_outfit( obj )
  if obj:is_outfit() then
    set_weight_parameters()
  end
end

function remove_outfit( obj )
  if obj:is_outfit() and not db.actor:get_current_outfit() then
    set_weight_parameters()
  end
end

--function on_update()
--  ogse_signals.get_mgr():reschedule( 1000 )
--  if not db.actor:alive() then return end
--  set_weight_parameters()
--end


local def_max_weight      = get_float( "inventory", "max_weight", 0 )
local def_max_walk_weight = get_float( "actor_condition", "max_walk_weight", 0 )

function set_weight_parameters()
--[=[
  local ext = {
    [ "actor_max_walk_weight"        ] = 0,
    [ "actor_max_weight"             ] = 0,
    [ "additional_inventory_weight"  ] = 0,
    [ "additional_inventory_weight2" ] = 0,
  }
  ogse_signals.get_mgr():call( "on_before_set_actor_max_weights", ext )
--]=]

  --log3("~~[%s] Before update parameters: max_weight: [%s], max_walk_weight: [%s], inv_weight: [%s]", script_name(), db.actor:get_actor_max_weight(), db.actor:get_actor_max_walk_weight(), db.actor:get_inventory_weight())

  local outfit = db.actor:get_current_outfit()
  if outfit then
    --local cond   = outfit:condition() --От состояния костюма может зависить его переносимый вес. Отключено.
    local params = get_outfit_params( outfit:section() )
    db.actor:set_actor_max_weight(
      def_max_weight --Дефолтный вес из конфига инвентаря
        --+ inventory.on_belt_restore_speed( "additional_inventory_weight2" ) -- + Вес, прибавляемый артефактами на поясе. Отключено.
        --+ ext.actor_max_weight
        + (
            params.additional_inventory_weight2 -- + Вес, прибавляемый надетым костюмом
              --+ ext.additional_inventory_weight2
          ) --* cond
    )
    db.actor:set_actor_max_walk_weight(
      def_max_walk_weight
        --+ inventory.on_belt_restore_speed( "additional_inventory_weight" )
        --+ ext.actor_max_walk_weight
        + (
            params.additional_inventory_weight
              --+ ext.additional_inventory_weight
          ) --* cond
    )
    set_outfit_additional_inventory_weight( outfit,  0 )
    set_outfit_additional_inventory_weight2( outfit, 0 )
  else --Если добавлю артефакты с увелечением переносимого веса, учесть их здесь
    db.actor:set_actor_max_weight( def_max_weight --[=[+ ext.actor_max_weight]=] )
    db.actor:set_actor_max_walk_weight(
      def_max_walk_weight --+ ext.additional_inventory_weight
    )
  end

  --log3("~~[%s] After update parameters: max_weight: [%s], max_walk_weight: [%s], inv_weight: [%s]", script_name(), db.actor:get_actor_max_weight(), db.actor:get_actor_max_walk_weight(), db.actor:get_inventory_weight())
end
