
function attach(sm)
	sm:subscribe({ signal = "on_first_update", fun = this.on_first_update })
-------------------------------------------------------------------------------
	sm:subscribe({signal = "on_item_to_slot", fun = this.check_remove_gasmask}) --ХЗ, в какой скрипт это перенести. Пусть тут будет, что-ли.
end


function on_first_update()
  rescan_belt()
  local sm = ogse_signals.get_mgr()
  sm:subscribe({ signal = "on_drop",         fun = this.on_belt_drop    })
  sm:subscribe({ signal = "on_item_to_belt", fun = this.rescan_belt     })
  sm:subscribe({ signal = "on_item_to_ruck", fun = this.on_belt_drop    })
  sm:subscribe({ signal = "on_item_to_slot", fun = this.on_item_to_slot })
end


--belt = {}
local belt_id  = {}
local af_restore_speeds = {
  --[ "additional_inventory_weight"  ] = 0,
  --[ "additional_inventory_weight2" ] = 0,
  [ "bleeding_restore_speed"   ] = 0,
  [ "health_restore_speed"     ] = 0,
  [ "power_restore_speed"      ] = 0,
  [ "psy_health_restore_speed" ] = 0,
  [ "radiation_restore_speed"  ] = 0,
  [ "satiety_restore_speed"    ] = 0,
}


function on_item_to_slot(item, sitem)
	-- принудительное убийство актора в случае перекидывания артефакта с пояса в слот
	-- такая ситуация при дальнейшей игре в любом случае чревата неизлечимыми глюками
	if item:is_artefact() then
		if belt_id[ item:id() ] then
			-- log1("Too bad - actor weared art from belt... bad idea... bye-bye actor 8(")
			alife():release(sitem, true)
			db.actor:kill(db.actor)
			db.actor:give_game_news(game.translate_string("inventory_art_hand_belt_text"), "ui\\ui_iconsTotal", Frect():set(0,188,83,47), 0, 10000)
			return true
		end
	end

	on_belt_drop( item )
end


function on_belt_drop( item )
  if belt_id[ item:id() ] then
    rescan_belt()
  end
end


function rescan_belt()
  for k, _ in pairs( af_restore_speeds ) do
    af_restore_speeds[ k ] = 0
  end
  --belt     = {}
  belt_id  = {}
  for i = 0, db.actor:belt_count() - 1 do
    local item = db.actor:item_on_belt( i )
    local sect = item:section()
    --belt[ sect ] = ( belt[ sect ] or 0 ) + 1
    belt_id[ item:id() ] = true
    local props = get_af_props( sect )
    for k, total in pairs( af_restore_speeds ) do
      af_restore_speeds[ k ] = total + props[ k ]
    end
  end
end


local cached_props = {}
function get_af_props( sect )
  if not cached_props[ sect ] then
    local t = {}
    local imm_sect = get_string( sect, "hit_absorbation_sect" )
    for k, _ in pairs( af_restore_speeds ) do
      t[ k ] = get_float( sect, k, 0 )
    end
    cached_props[ sect ] = t
  end
  return cached_props[ sect ]
end


function on_belt_restore_speed( k )
  --log3("~~af_restore_speeds tbl: %s", af_restore_speeds)
  return af_restore_speeds[ k ] or 0
end


-------------[Проверка надевания противогаза на костюм с худом]-------------
--Перенесено из модуля динамического худа
function have_gasmask() --проверка, имеет ли костюм встроенный противогаз
	local armor = db.actor:get_current_outfit()
	if not armor then return false end

	local armorname = armor:section()
	if 	string.find(armorname, "monolit_exoskeleton") or
		string.find(armorname, "military_outfit") or
		string.find(armorname, "svoboda_heavy_outfit") or
		string.find(armorname, "scientific_outfit") or
		string.find(armorname, "ecolog_outfit") or
		string.find(armorname, "protection_outfit") or
		string.find(armorname, "specops_outfit") or
		string.find(armorname, "outfit_specnaz") or
		string.find(armorname, "outfit_dolg") or
		string.find(armorname, "killer_outfit") then
		return true
	end
end

local counter = 0
function check_remove_gasmask()
	local bio_belt = db.actor:item_in_slot(10)
	if not bio_belt then return end

	local sect = bio_belt:section()
	if sect == "af_maska_1" or sect == "af_maska_2" then
		if have_gasmask() then
			db.actor:move_to_ruck(bio_belt)
			counter = counter + 1
			if counter == 1 then
				news_text = game.translate_string("dinhud_gasmask_text")
				db.actor:give_game_news(news_text, "ui\\ui_iconsTotal", Frect():set(0,188,83,47), 0, 5000)	
			end
		end
	end
end
----------------------------------------------------------------------------
