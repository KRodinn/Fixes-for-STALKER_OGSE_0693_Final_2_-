--------------------------------------------------------------------------------
-- Dynamic HUD from ABC Inferno and AMK by Rulix
-- Исправлено и доработано для OGSE by OGSE Team 2009-2013
--------------------------------------------------------------------------------

local nv_cheat = system_ini():r_bool("wpn_addon_setup", "cheat_nv_block")
local nv_block = nv_cheat

-- чтобы отключить эффект, поставьте вместо единицы ноль:
local blurs_enable = system_ini():r_s32("options","blurs_enable")
local blood_enable = system_ini():r_s32("options","blood_enable")
local bleed_enable = system_ini():r_s32("options","bleed_enable")
local suithud = system_ini():r_s32("options","suithud_enable")

local suithud_enable = suithud
local need_sniper_chek = false
local sniper_mode = false
local sm = ogse_signals.get_mgr()
local mycurrent_suithud
local suit_condition
local wotsuittype = ""
local blood_intensity = 0
local show_time = true

-- global functions -------------------------------------------------------------------------------------------------

-- вызывается из ogse.on_actor_update
-- Убирание худа при использовании оптического прицела или бинокля -- scope_texture
function set_shiper_check_flag()
	need_sniper_check = true
end

function check_sniper()
	if db.actor and db.actor:alive() and (need_sniper_chek == true or sniper_mode == true) then
		if zoom_mode() then
			local act_it = db.actor:active_item()
			if act_it and (string.find(act_it:section(), "wpn_") or string.find(act_it:section(), "hunters_toz")) then
				local sobj = alife():object(act_it:id())
				if not sobj then return end
				local scope = 0
				if system_ini():line_exist(act_it:section(), "scope_status") then
					scope = system_ini():r_u32(act_it:section(), "scope_status")
				end
				local launcher = 0
				if system_ini():line_exist(act_it:section(), "grenade_launcher_status") then
					launcher = system_ini():r_u32(act_it:section(), "grenade_launcher_status")
				end
				local wpn_state = m_net_utils.get_weapon_w_gl_full_data(sobj) 
				if (scope == 1 or (scope == 2 and bit_and(wpn_state.addon_flags, 1) == 1)) and 
				   ((launcher == 0) or (launcher == 2 and (bit_and(wpn_state.addon_flags, 2) ~= 2)) or 
				    (launcher == 2 and (bit_and(wpn_state.addon_flags, 2) == 2 and wpn_state.updgrenade_mode == 0)) or 
				    (launcher == 1 and wpn_state.updgrenade_mode == 0)) or 
				   string.find(act_it:section(), "wpn_binoc") then
					sniper_mode = true
					return
				end
			end
		end
	end
	sniper_mode = false
end

-- вызывается из ogse.on_actor_update
-- Обновление динамических элементов худа
function update_hud_elements()
	if db.actor and db.actor:alive() then
		local act_it = db.actor:active_item()
		if act_it and (string.find(act_it:section(), "wpn_") or string.find(act_it:section(), "hunters_toz")) then
			if sniper_mode == true then
				if suithud_enable == 1 then
					set_blood_intensity(0)
					suithud_enable = 0
					set_my_suit_hud(nil)
				end
				---целимся с оптикой: в ОГСЕ -- БЛОК ВСЕХ --ogse_night_vision.on_sniper_mode(true)
				
-- k01jan (обратотка исключений для запрета ПНВ во время прицеливания через оптику)
				local scope_section = nil
				local nv_lock = true
				if system_ini():line_exist(act_it:section(), "scope_name") then	--ищем используемый стволом прицел
					scope_section = system_ini():r_string(act_it:section(), "scope_name")
					if scope_section ~= nil then --ищем параметр nightvision_lock в прицеле
						if system_ini():line_exist(scope_section, "nightvision_lock") then --читаем nightvision_lock из прицела
							--ловит только "есть" или "нет" nightvision_lock в конфиге -----nv_lock = system_ini():r_string(scope_section, "nightvision_lock")
							--если в конфиге nightvision_lock=false то, в виде исключения, разрешаем использовать ПНВ с оптикой (z.b., коллиматоры)
							nv_lock = system_ini():r_bool(scope_section, "nightvision_lock")
						--else ogse.send_tip("НЕТ nightvision_lock в этом прицеле")
						end
											end
				--- КОСЯК: пропускает прицелы, встроенные (scope_status =1 а scope_name НЕТ) в стволы (например G36), фиксим:
				else --ogse.send_tip("НЕТ scope_name в конфиге") --ищем параметр nightvision_lock в стволе 
					if system_ini():line_exist(act_it:section(), "nightvision_lock") then --читаем nightvision_lock из ствола
						--если в конфиге nightvision_lock=false то, в виде исключения, разрешаем использовать ПНВ с оптикой (z.b., коллиматоры)
						nv_lock = system_ini():r_bool(act_it:section(), "nightvision_lock")
					--else ogse.send_tip("НЕТ nightvision_lock в этом стволе")
					end
				end
				
				-- для открытой оптики не прячем худовых элементов
	--[[			if nv_lock == true then
					show_time = false
					ui_rad.update(false)
					biodetector.update("off")
				else
					show_time = true
				end]]
				-- все прячем при прицеливании
				show_time = false
				ui_rad.update(false)
				biodetector.update("off")
--проверка запрета ПНВ для оптики
				if nv_block == true then --ogse.send_tip("запрет ПНВ для оптики, дефолт ОГСЕ")
					if nv_lock == true then  ogse_night_vision.on_sniper_mode(true, scope_section)
					--+else ogse.send_tip("ИСКЛЮЧЕНИЕ - разрешаем ПНВ")
					end
				--+else ogse.send_tip("ЧИТ - разрешаем ПНВ для оптики") 
				end				
-- EOF k01jan
			else
				biodetector.update()
				ui_rad.update(true)	
				show_time = true
	
				if suithud == 1 and suithud_enable == 0 then
					suithud_enable = 1
					check_my_suit_hud()			
				end	
				ogse_night_vision.on_sniper_mode(false)
			end
		else
			biodetector.update()
			ui_rad.update(true)
			show_time = true
			ogse_night_vision.on_sniper_mode(false)
		end
	else	
		if suithud_enable == 1 then
			set_blood_intensity(0)
			suithud_enable = 0
			set_my_suit_hud(nil)
		end
		biodetector.update("off")
		ogse.hide_time()
		ui_rad.update(false)
		show_time = false
	end
end

function need_to_show_time()
	return show_time
end

-- вызывается из ogse.on_actor_update
local freemem = 0
local freemem2 = 0
function doabcevents()
	if db.actor == nil then return end
	
	local chkfreetime = time_global()
	if freemem == 0 then freemem = time_global() + 1000 end
	if chkfreetime > freemem then
		freemem = 0
		remove_m134()
		check_my_suit_hud()
		bleed_condition()
		set_blood()
	end
	local chkfreetime2 = time_global()
	if freemem2 == 0 then freemem2 = time_global() + 40 end
	if chkfreetime2 > freemem2 then
		freemem2 = 0
		init_blurs()
		init_blood()
	end
end

function switch_shader_effects(mode)
	cmd("r2_rain_drops_control "..mode)
	cmd("r2_lens_dirt_control "..mode)
end

-- вызывается из ogse.on_actor_update
-- запускается(так сейчас по коду) после 102 апдейтов
function hud_antigaz()
	if check_remove_gasmask() == true then return end	-- проверка надевания противогаза на костюм с худом
	if suithud_enable == 0 then return end

	local gmask = db.actor:item_in_slot(10)
	if not gmask then return end
	
	if gmask:section() == "af_maska_1" then
		set_my_suit_hud("hud_gazmask")
	elseif gmask:section() == "af_maska_2" then
		set_my_suit_hud("hud_merc")
	else
		set_my_suit_hud(nil)
	end
end

-- вызывается из ogse.on_key
-- Проверка нажатия клавиш
function chek_keys(key, bind)
	if bind == key_bindings.kWPN_ZOOM then
		need_sniper_chek = true
	end
end

-- вызывается из ogse.on_key_free
-- Проверка отпускания клавиш
function chek_keys_free(key, bind)
	if bind == key_bindings.kWPN_ZOOM then
		need_sniper_chek = false
	end
end

-- вызывается из ogse_car_control.show_car_hud
function on_show_car_hud()
	set_blood_intensity(0)
	suithud_enable = 0
	set_my_suit_hud(nil)
end

-- вызывается из ogse_car_control.hide_car_hud
function on_hide_car_hud()
	suithud_enable = get_u32("options","suithud_enable", 0)
	check_my_suit_hud()
end

-- вызывается из ogse_hitfx.npc_on_death
function set_blood_intensity(intensity)
	blood_intensity = intensity
	set_blood()
end

-- local functions---------------------------------------------------------------------------------------

local smoktime = 0
function check_my_suit_hud()
	if suithud_enable == 0 then return end
	local gsmktime = time_global()
	if smoktime == 0 then smoktime = time_global() + 4000 end

	if db.actor ~= nil then
		local csuithud = db.actor:get_current_outfit()
		local suithudtype, isitbino, suithudname
		if csuithud ~= nil then suithudname = csuithud:section() end
		if suithudname ~= nil then
			suit_condition = ""
			if csuithud:condition() <= 0.25 then suit_condition = "red3" end
			if csuithud:condition() > 0.25 then suit_condition = "red2" end
			if csuithud:condition() > 0.60 then suit_condition = "yellow" end
			if csuithud:condition() > 0.87 then suit_condition = "blue" end
		
			if string.find(suithudname, "scientific_outfit") then
				suithudtype = "hud_sci_" .. suit_condition
				wotsuittype = "hud_sci"
			end
			if string.find(suithudname, "ecolog_outfit") then
				suithudtype = "hud_sci_" .. suit_condition
				wotsuittype = "hud_sci"
			end
			if string.find(suithudname, "protection_outfit") then
				suithudtype = "hud_sci_" .. suit_condition
				wotsuittype = "hud_sci"
			end
			if string.find(suithudname, "military_outfit") then
				suithudtype = "hud_mil_" .. suit_condition
				wotsuittype = "hud_mil"
			end
			if string.find(suithudname, "specops_outfit") then
				suithudtype = "hud_mil_" .. suit_condition
				wotsuittype = "hud_mil"
			end
			if string.find(suithudname, "outfit_specnaz") then
				suithudtype = "hud_mil_" .. suit_condition
				wotsuittype = "hud_mil"
			end				
			if string.find(suithudname, "svoboda_heavy_outfit") then
				suithudtype = "hud_gaz_" .. suit_condition
				wotsuittype = "hud_gaz"
			end
			if string.find(suithudname, "outfit_dolg") then
				suithudtype = "hud_gaz_" .. suit_condition
				wotsuittype = "hud_gaz"
			end			
			if string.find(suithudname, "monolit_exoskeleton") then
				suithudtype = "hud_exo_" .. suit_condition
				wotsuittype = "hud_exo"
			end
			if string.find(suithudname, "killer_outfit") then
				suithudtype = "hud_kill_" .. suit_condition
				wotsuittype = "hud_kill"
			end			
			--- 
		else
			suithudtype = nil
		end
		if not db.actor:alive() then suithudtype = nil end
		set_my_suit_hud(suithudtype)
	end
end

local suitfirstrun = "yes"

function set_my_suit_hud(hudtype)
	if hudtype == nil then
		local wchud = get_hud():GetCustomStatic(mycurrent_suithud)
		if wchud ~= nil then get_hud():RemoveCustomStatic(mycurrent_suithud) end
		mycurrent_suithud = nil
		suitfirstrun = "yes"
		switch_shader_effects("off")
		return
	end
	if hudtype ~= mycurrent_suithud then
		if mycurrent_suithud then
			get_hud():RemoveCustomStatic(mycurrent_suithud)
		end
		if hudtype then
			get_hud():AddCustomStatic(hudtype)
			sm:call("on_hud_show")
			if string.find(hudtype, wotsuittype) then
				if suitfirstrun == "no" and suit_condition ~= "green" and suit_condition ~= "blue" then
					local snd_obj = sound_object("material\\glass\\glass_fall03hl")
					if snd_obj then
						snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 9.0)
					end
				end
				if suitfirstrun == "yes" then suitfirstrun = "no" end
			end
		end
	end
	switch_shader_effects("on")
	mycurrent_suithud = hudtype
end

local isactcondset = "false"
local radeffect = "false"
function bleed_condition()
	if bleed_enable == 0 then return end
	if db.actor.health < 0.31 and isactcondset ~= "true" then
		level.add_pp_effector ("alcohol.ppe", 2012, true)
		isactcondset = "true"
	end
	if db.actor.health > 0.30 and isactcondset ~= "false" then
		level.remove_pp_effector (2012)
		isactcondset = "false"
	end
	if db.actor.radiation > 0.3 and radeffect ~= "true" then
		level.add_pp_effector ("alcohol.ppe", 2013, true)
		radeffect = "true"
	end
	if db.actor.radiation == 0 and radeffect ~= "false" then
		level.remove_pp_effector (2013)
		radeffect = "false"
	end
end

local m_blood = nil

function init_blood()
	if blood_enable == 0 then return end
	if mycurrent_suithud ~= nil then
		local zoom=67.5/device().fov
		zoom=(zoom-1)*1.5+1
		if zoom<1.001 then
			zoom=1.001
		end
		local stretchy=0.75/(math.floor(device().aspect_ratio*1000)/1000)
		if stretchy<1 then stretchy=1 end
		local rect={x=-768*zoom+768,y=(-512*zoom+512)*stretchy-(stretchy-1)*300,w=1024*zoom,h=768*zoom*stretchy}
		if get_hud():GetCustomStatic("hud_blood_exo") == nil then
			get_hud():AddCustomStatic("hud_blood_exo")
			m_blood = get_hud():GetCustomStatic("hud_blood_exo"):wnd()
			m_blood:SetWidth(0)
			m_blood:SetColor(GetARGB(0,255,255,255))
			m_blood:SetWndRect(Frect():set(rect.x,rect.y,rect.w,rect.h))
			sm:call("on_hud_show")
		end
		if get_hud():GetCustomStatic("hud_blood_gas") == nil then
			get_hud():AddCustomStatic("hud_blood_gas")
			m_blood = get_hud():GetCustomStatic("hud_blood_gas"):wnd()
			m_blood:SetWidth(0)
			m_blood:SetColor(GetARGB(0,255,255,255))
			m_blood:SetWndRect(Frect():set(rect.x,rect.y,rect.w,rect.h))			
			sm:call("on_hud_show")
		end
		if get_hud():GetCustomStatic("hud_blood_merc") == nil then
			get_hud():AddCustomStatic("hud_blood_merc")
			m_blood = get_hud():GetCustomStatic("hud_blood_merc"):wnd()
			m_blood:SetWidth(0)
			m_blood:SetColor(GetARGB(0,255,255,255))
			m_blood:SetWndRect(Frect():set(rect.x,rect.y,rect.w,rect.h))			
			sm:call("on_hud_show")
		end
		if get_hud():GetCustomStatic("hud_blood_mil") == nil then
			get_hud():AddCustomStatic("hud_blood_mil")
			m_blood = get_hud():GetCustomStatic("hud_blood_mil"):wnd()
			m_blood:SetWidth(0)
			m_blood:SetColor(GetARGB(0,255,255,255))
			m_blood:SetWndRect(Frect():set(rect.x,rect.y,rect.w,rect.h))			
			sm:call("on_hud_show")
		end
		if get_hud():GetCustomStatic("hud_blood_sci") == nil then
			get_hud():AddCustomStatic("hud_blood_sci")
			m_blood = get_hud():GetCustomStatic("hud_blood_sci"):wnd()
			m_blood:SetWidth(0)
			m_blood:SetColor(GetARGB(0,255,255,255))
			m_blood:SetWndRect(Frect():set(rect.x,rect.y,rect.w,rect.h))			
			sm:call("on_hud_show")
		end		
	end
end

function set_blood()
	if mycurrent_suithud then
		if string.find(mycurrent_suithud,"hud_exo") and get_hud():GetCustomStatic("hud_blood_exo") then
			m_blood = get_hud():GetCustomStatic("hud_blood_exo"):wnd()
			m_blood:SetColor(GetARGB(blood_intensity,255,255,255))
			if blood_intensity > 50 then blood_intensity = blood_intensity - 50 else blood_intensity = 0 end
		elseif string.find(mycurrent_suithud,"hud_mil") and get_hud():GetCustomStatic("hud_blood_mil") then
			m_blood = get_hud():GetCustomStatic("hud_blood_mil"):wnd()
			m_blood:SetColor(GetARGB(blood_intensity,255,255,255))
			if blood_intensity > 50 then blood_intensity = blood_intensity - 50 else blood_intensity = 0 end
		elseif string.find(mycurrent_suithud,"hud_sci") and get_hud():GetCustomStatic("hud_blood_sci") then
			m_blood = get_hud():GetCustomStatic("hud_blood_sci"):wnd()
			m_blood:SetColor(GetARGB(blood_intensity,255,255,255))
			if blood_intensity > 50 then blood_intensity = blood_intensity - 50 else blood_intensity = 0 end
		elseif string.find(mycurrent_suithud,"hud_merc") and get_hud():GetCustomStatic("hud_blood_merc") then
			m_blood = get_hud():GetCustomStatic("hud_blood_merc"):wnd()
			m_blood:SetColor(GetARGB(blood_intensity,255,255,255))
			if blood_intensity > 50 then blood_intensity = blood_intensity - 50 else blood_intensity = 0 end
		elseif string.find(mycurrent_suithud,"hud_gaz") and get_hud():GetCustomStatic("hud_blood_gas") then
			m_blood = get_hud():GetCustomStatic("hud_blood_gas"):wnd()
			m_blood:SetColor(GetARGB(blood_intensity,255,255,255))
			if blood_intensity > 50 then blood_intensity = blood_intensity - 50 else blood_intensity = 0 end
		end		
	end
end

function init_blurs()
	if blurs_enable == 0 then return end
	if mycurrent_suithud ~= nil and not string.find(mycurrent_suithud,"_red3") and not string.find(mycurrent_suithud,"hud_sci_") then
		local zoom=67.5/device().fov
		zoom=(zoom-1)*1.5+1
		if zoom<1.001 then
			zoom=1.001
		end
		local stretchy=0.75/(math.floor(device().aspect_ratio*1000)/1000)
		if stretchy<1 then stretchy=1 end
		local rect={x=-768*zoom+768,y=(-512*zoom+512)*stretchy-(stretchy-1)*300,w=1024*zoom,h=768*zoom*stretchy}
		set_blurs(true,rect)
	else
		set_blurs(false)
	end
end

local blurs=nil
local blurval=0 -- уровень запотевания от 0 до 1
local blurlt=0 -- время последнего обновления
local blurcyctime=0 -- время начала последнего цикла дыхания (выдох)
local blurlastphase=0
function set_blurs(enabled,rect)
	if (not blurs) or get_hud():GetCustomStatic("hud_blur1")==nil then
		blurs={}
		for i=1,4 do
			get_hud():AddCustomStatic("hud_blur"..i)
			blurs[i]=get_hud():GetCustomStatic("hud_blur"..i):wnd()
			blurs[i]:SetWidth(0)
			sm:call("on_hud_show")
		end
	end
	if not enabled then
		for i=1,4 do
			blurs[i]:SetWidth(0)
		end
		return
	end
-- Циклы в зависимости от силы дыхания: 0->1->0 0->1->2->4->5->0 0->1->2->3->4->5->0 5->4->3->4->5 4->3->4
	local power=db.actor.power
	local period=1.0+power*power*1.0 -- текущая частота дыхания от 30 до 120 циклов в минуту
	local expirt=0.3
	local breathpower=3
	local delta=(time_global()-blurlt)/1000 -- дельта в секундах
	local phase=(time_global()-blurcyctime)/1000 -- фаза дыхательного цикла в сек.
	blurlt=time_global()
	if phase>period then
		phase=phase%period
		blurcyctime=blurlt-phase*1000
	end
	if blurlastphase>phase then
		blurlastphase=0
	end
	local blurdelta=delta*-0.7 -- работа вентилляции
	if blurlastphase<expirt and phase<expirt then
		blurdelta=blurdelta+(phase-blurlastphase)*breathpower
	elseif blurlastphase<expirt then
		blurdelta=blurdelta+(expirt-blurlastphase)*breathpower
	end
	blurlastphase=phase
	blurval=blurval+blurdelta
	if blurval>0.999 then
		blurval=0.999
	elseif blurval<0 then
		blurval=0
	end
	local tm=math.floor(blurval*3)
	local tmn=(tm+1)
	local v=blurval*3-math.floor(blurval*3)
	v=1-v
	local v1=1-v
	if tm~=0 then
		blurs[tm]:SetColor(GetARGB(v*255,255,255,255))
	end
	if tmn~=0 then
		blurs[tmn]:SetColor(GetARGB(v1*255,255,255,255))
	end
	for i=1,4 do
		if i==tm or i==tmn then
			blurs[i]:SetWndRect(Frect():set(rect.x,rect.y,rect.w,rect.h))
		else
			blurs[i]:SetWndRect(Frect():set(rect.x,rect.y,0,0))
		end
	end
end

-- Проверка на М-134 и экзоскелет
local counter2 = 0
function remove_m134()
	if counter2 and counter2 == 0 then
		local m134 = db.actor:item_in_slot(2)
		if (m134 and m134:section() == "wpn_m_134") and not is_exo() then
			db.actor:drop_item(m134)
			news_text = game.translate_string("dinhud_gatling_text")
			db.actor:give_game_news(news_text, "ui\\ui_iconsTotal", Frect():set(0,188,83,47), 0, 3000)
			counter2 = counter2 + 1			
		end
	else
		local m134 = db.actor:item_in_slot(2)
		if (m134 and m134:section() == "wpn_m_134") and not is_exo() then
			db.actor:drop_item(m134)
		end	
	end
end

local counter = 0
function check_remove_gasmask()
	local bio_belt = db.actor:item_in_slot(10)
	if have_gasmask() == true and bio_belt then
		local sect = bio_belt:section()
		if sect == "af_maska_1" or sect == "af_maska_2" then 
			db.actor:move_to_ruck(bio_belt)
			counter = counter + 1
			if counter and counter == 1 then
				news_text = game.translate_string("dinhud_gasmask_text")
				db.actor:give_game_news(news_text, "ui\\ui_iconsTotal", Frect():set(0,188,83,47), 0, 5000)	
			end				
		end	
		return true
	end
	return false
end

-- Проверка, в экзе ли мы бегаем
function is_exo()
	local bronik = db.actor:get_current_outfit()
	local bronikname 
	if bronik ~= nil then bronikname = bronik:section() end 
	if bronikname ~= nil then
	 	if 	string.find(bronikname, "_exo") then
			return true
		else
			return false
		end			
	end	
end

function have_gasmask()
	local armor = db.actor:get_current_outfit()
	local armorname  
	if armor ~= nil then armorname = armor:section() end 
	if armorname ~= nil then		
		if 	string.find(armorname, "monolit_exoskeleton") or
			string.find(armorname, "military_outfit") or
			string.find(armorname, "svoboda_heavy_outfit") or
			string.find(armorname, "scientific_outfit") or
			string.find(armorname, "ecolog_outfit") or
			string.find(armorname, "protection_outfit") or
			string.find(armorname, "specops_outfit") or
			string.find(armorname, "outfit_specnaz") or
			string.find(armorname, "outfit_dolg") or
			string.find(armorname, "killer_outfit") then
			return true
		end		
	end	
	return false
end

function is_sniper_mode()
	return sniper_mode
end