--Сделано чтобы бандиты не убивали пленного долговца пока он находится в тюрьме.
--К рестрикторам этот скрипт больше не имеет никакого отношения.
--KRodin (c) 2016

function attach(sm)
	sm:subscribe({ signal = "on_spawn", fun = this.on_spawn })
end

function on_spawn()
	if level.name() == "l04_darkvalley" then
		check_subscribe_enemy_callback()
	end
end

function on_info(npc, info_id)
	if info_id == "val_prisoner_scene_end" then --Инфопоршень выдаётся когда актор освобождает долговца из тюрьмы. После этого скрипт прекращает работу.
		check_subscribe_enemy_callback()
	end
end

local enemy_callback
function check_subscribe_enemy_callback()
	local sobj = alife():story_object(story_ids.val_prisoner)
	local sm = ogse_signals.get_mgr()
	if sobj and sobj:alive() and object_level_name(sobj) == "l04_darkvalley" and not has_alife_info("val_prisoner_scene_end") and not enemy_callback then
		enemy_callback = {
			{ signal = "on_npc_enemy_callback", fun = this.on_npc_enemy_callback },
			{ signal = "on_info", fun = this.on_info },
		}
		for _, s in ipairs( enemy_callback ) do
			sm:subscribe( s )
		end
		--log3("~~[%s] Enemy callback subscribed!", script_name())
	elseif enemy_callback then
		for _, s in ipairs( enemy_callback ) do
			sm:unsubscribe( s )
		end
		--log3("~~[%s] Enemy callback UNsubscribed!", script_name())
	end
end

function on_npc_enemy_callback( obj, enemy, result )
	if obj:story_id() == story_ids.val_prisoner or enemy:story_id() == story_ids.val_prisoner then --Бандиты не атакуют долговца, а долговец их.
		table.insert(result, false)
		return true
	end
end
