--[[----------------------------------------------------------------------
-|ogse_hud_control.script
-|Управление худом.
-|KRodin © 2016
-|Version: 3.0
-|Для работы нужен модуль функций работы с оружием ogse_wpn_utils.script
------------------------------------------------------------------------]]

function attach(sm)
	sm:subscribe({ signal = "on_key_down",		fun = this.check_keys })
	sm:subscribe({ signal = "on_key_up",		fun = this.check_keys_free })
	sm:subscribe({ signal = "on_update",		fun = this.update_hud_control })
	sm:subscribe({ signal = "on_actor_death",	fun = this.on_actor_death })
end

local need_sniper_check = false --флаг для проверки, нажал ли игрок кнопку зума (ПКМ по умолчанию)
local show_indicators = true --нужно для правильного убирания худа при прицеливании.
local aiming_complete = false --нужно для правильного "наезжания" прицела.
local sm = ogse_signals.get_mgr() --Вызов менеджера сигналов

function check_keys(key, bind) --Проверка нажатия клавиш
	if bind ~= key_bindings.kWPN_ZOOM
	or level.main_input_receiver() then
		return
	end

	need_sniper_check = true
end

function check_keys_free(key, bind) --Проверка отпускания клавиш
	if bind ~= key_bindings.kWPN_ZOOM
	or level.main_input_receiver() then
		return
	end

	need_sniper_check = false
end

function check_sniper(wpn) --Проверка, смотрит ли актор в оптический прицел. (true/false)
	if	not need_sniper_check --если проверка не требуется
		or not zoom_mode() --доп. проверка на зум, чтобы не было ложных срабатываний
		or ogse_wpn_utils.get_forced_notex_scope(wpn) --или на оружии установлен колиматорный прицел
	then
		return false --возвращаем false и на этом заканчиваем
	end

	if wpn:is_binoculars() then return true end --Если в руках оружие на классе бинокля, то возвращаем true и на этом заканчиваем

	local scope = ogse_wpn_utils.get_scope_flag(wpn) --Есть ли на оружии прицел (true/false)
	local gl_mode = false
	if wpn:is_weapon_gl() then gl_mode = ogse_wpn_utils.get_gl_mode(wpn) end --Находится ли оружие в режиме стрельбы из ПГ (true/false)
	return (scope and not gl_mode) --Если на оружии есть прицел и при этом оружие не находится в режиме стрельбы из ПГ - то true
end

function update_hud_control() --Собственно, управление элементами худа.
	if not db.actor:alive() then return end

	local act_it = db.actor:active_item() --Проверяем что в руках у актора
	if act_it and act_it:is_weapon() and check_sniper(act_it) then --Если в руках оружие с оптикой и актор целится в него
		if show_indicators then
			level.hide_indicators() --убираем худ
			show_indicators = false
		end
		if ogse_wpn_utils.is_aiming_complete(act_it) then --Ждём, пока завершится "наезжание" прицела
			if not aiming_complete then
				sm:call("on_sniper_mode") --Включаем пнв/подсветку прицела.
				aiming_complete = true
			end
		else
			aiming_complete = false
		end
	elseif level.main_input_receiver() then --Если открыли инвентарь, пда или любое другое окно
		if aiming_complete then
			sm:call("off_sniper_mode") --Багфикс
			aiming_complete = false
		end
	elseif not show_indicators then --в противном случае
		level.show_indicators() --покажем худ
		sm:call("off_sniper_mode") --отключаем ПНВ/Подсветку прицела
		show_indicators = true
	end
end

function on_actor_death() --при смерти актора
	level.hide_indicators() --убираем худ
	level.disable_input() --игнор нажатия кнопок клавиатуры/мыши (можно только выйти в меню)
end
