------------------------------------------------------------
------------------------------------------------------------
-- Продажа и спавн всего транспорта в игре (OGSE mod)
-- Тотальная переделка: KamikaZze, 2010 год для OGSE 0692
-- Доработки: Dusty79, для OGSE 0693
-- Модуль интерфейса и логики управления БТР --
-- version 1.9 (27/04/2011)--

function attach() -- для менеджера аддонов
	return this
end

local sim
function on_spawn(sactor)
	sim = alife()
end

function on_storyline_start()
	transport_spawn_load(object)
end
------------------------------------------------------------
-- Таблица транспорта
------------------------------------------------------------

local trade_cars = {}
do
	for _,sec in pairs(get_section_keys("ogse_cars_trade")) do
		local item = {}
		item.section         = get_string(sec, "car_section")     ASSERT(item.section, "item.sec")
		local w,n,i = trunk_inv.get_car_data(item.section)
		item.name            = n
		item.disabled        = get_bool(sec, "disabled", false)
		item.position        = get_vector(sec, "position")        ASSERT(item.position, "item.pos")
		item.l_vid           = get_u32(sec, "l_vid")              ASSERT(item.l_vid, "item.lvid")
		item.g_vid           = get_u32(sec, "g_vid")              ASSERT(item.g_vid, "item.gvid")
		item.trader          = get_string(sec, "initial_trader")  ASSERT(item.trader, "item.initial_trader")
		item.precond         = get_string(sec, "precond", "nil")  ASSERT(item.precond, "item.precond")
		item.price           = get_float(sec, "cost")
		item.location        = level_name_by_gvid(item.g_vid)
		item.descript        = game.translate_string(get_string(sec, "description"))
		table.insert(trade_cars, item)
	end
end

------------------------------------------------------------
-- Интерфейс покупки транспорта
------------------------------------------------------------

local trader_sect = nil

function open_car_trade_dialog(actor, trader)
	trader_sect = trader:profile_name()
	local spwn = car_trade_dialog(get_hud())
	level.start_stop_menu(spwn,true)	
end


class "select_car_trade_items" (CUIListItemEx)

function select_car_trade_items:__init() super()
-- -- log1("Начинаем инициализацию поля списка предметов")
	self.item_name		= "itemname"
	self:SetWndRect		(0,0,320,22)
	
	local ca = 255
	local cr = 216
	local cg = 186
	local cb = 140
	
	self.itmnum				= CUIStatic	()
	self.itmnum:SetAutoDelete	(true)
	self:AttachChild		(self.itmnum)
	self.itmnum:SetWndRect	(0,0,20,22)
	self.itmnum:SetText		("itemnum")
	self.itmnum:SetFont		(GetFontLetterica16Russian())
	self.itmnum:SetTextColor	(ca,cr,cg,cb)

	self.itmn					= CUIStatic	()
	self.itmn:SetAutoDelete	(true)
	self:AttachChild		(self.itmn)
	self.itmn:SetWndRect		(25,0,205,22)
	self.itmn:SetText			("itemname")
	self.itmn:SetFont			(GetFontLetterica18Russian())
	self.itmn:SetTextColor	(ca,cr,cg,cb)

	self.itmage				= CUIStatic	()
	self.itmage:SetAutoDelete	(true)
	self:AttachChild		(self.itmage)
	self.itmage:SetWndRect	(250,0,40,22)
	self.itmage:SetText		("itemage")
	self.itmage:SetFont		(GetFontLetterica16Russian())
	self.itmage:SetTextColor	(ca,cr,cg,cb)
-- -- log1("Поле списка предметов инициализировано")
end

class "select_car_descr" (CUIListItemEx)

function select_car_descr:__init() super()
-- -- log1("Начинаем инициализацию поля списка предметов")
	self.item_name		= "itemname"
	self:SetWndRect		(0,0,320,22)
	
	local ca = 255
	local cr = 216
	local cg = 186
	local cb = 140
	
	self.itmnum				= CUIStatic	()
	self.itmnum:SetAutoDelete	(true)
	self:AttachChild		(self.itmnum)
	self.itmnum:SetWndRect	(0,0,20,200)
	self.itmnum:SetText		("itemnum")
	self.itmnum:SetFont		(GetFontLetterica18Russian())
	self.itmnum:SetTextColor	(ca,cr,cg,cb)

end


class "car_trade_dialog" (CUIScriptWnd)


function car_trade_dialog:__init() super()
	self.dlg = self
	self:InitControls()
	self:InitCallBacks()
	self:FillList()
end

function car_trade_dialog:__finalize() end


function car_trade_dialog:InitControls()
-- -- log1("Инициализируем управление формой")
	-- здесь определяем координаты левого верхнего угла и ширину-высоту
	self:Init(50,50,550,450)

	-- файл-описатель наших элементов
	local xml = CScriptXmlInit()
	local ctrl
	
	xml:ParseFile("ui_car_trade.xml")
	-- видео на заднем плане
	xml:InitStatic("back_video", self)
	-- рамка
	xml:InitStatic("background", self)

	-- рамка предмета
	xml:InitStatic("item_frame2", self)

	-- список предметов
	xml:InitFrame("list_frame", self)
	xml:InitFrame("desc_frame", self)
	xml:InitFrame("desc_list", self)

	ctrl = xml:InitList("list", self)
	ctrl:ShowSelectedItem(true)
	
	self:Register(ctrl, "list_window")
	
	ctrl = xml:InitList("desc_list", self)
	ctrl:ShowSelectedItem(true)	
	
	self:Register(ctrl, "desc_window")

	-- кнопки
	self:Register(xml:Init3tButton("window_name", self),"window_name")
	
	
	self:Register(xml:Init3tButton("caption1", self),"caption1")
	self:Register(xml:Init3tButton("caption2", self),"caption2")
	self:Register(xml:Init3tButton("caption4", self),"caption4")
	
	self:Register(xml:Init3tButton("caption5", self),"caption4")
	self:Register(xml:Init3tButton("caption6", self),"caption4")
	
	self.btn_4 = xml:Init3tButton("btn_4", self)
	self:Register(self.btn_4, "btn_4")
	self.btn_4:Enable(false)	
	
	-- кнопка выхода
	self:Register(xml:Init3tButton("btn_quit", self),"btn_quit")

	self.message_box = CUIMessageBoxEx()
	self:Register(self.message_box,"message_box")
-- -- log1("Управление формой инициализировано")

	local money = db.actor:money()
	self:DrawMoney(money, 260, 63)
end


function car_trade_dialog:InitCallBacks()
-- -- log1("Инициализируем коллбэки")
	-- тут интерактивные элементы, при определенном действии выполняется заданная ф-ия
	self:AddCallback("btn_4", ui_events.BUTTON_CLICKED, self.buy_car, self)
	
	self:AddCallback("btn_quit", ui_events.BUTTON_CLICKED, self.on_quit, self)
	
	self:AddCallback("list_window", ui_events.LIST_ITEM_CLICKED, 			  self.OnListItemClicked,		self)
	self:AddCallback("list_window", ui_events.WINDOW_LBUTTON_DB_CLICK,		  self.OnListItemDbClicked,		self)

	self:AddCallback("message_box",		ui_events.MESSAGE_BOX_OK_CLICKED,	  self.OnMsgYes,				self)
-- -- log1("Коллбэки инициализированы")
end


function car_trade_dialog:FillList()
	for i, car_item in ipairs(trade_cars) do
		if not car_item.disabled and string.find(trader_sect, car_item.trader) and
			(car_item.precond == "nil" or has_alife_info(car_item.precond))
		then
			self:AddItemToList(tostring(i), car_item.name, car_item.location)
		end
	end
end


function car_trade_dialog:OnListItemClicked()

	local list_box = self:GetListWnd("list_window")
	local desc_box = self:GetListWnd("desc_window")
	
	if list_box:GetSize() == 0 then return end
	
	local itm_index = list_box:GetSelectedItem()
	
	local item = list_box:GetItem(itm_index)

	if item == nil then return end
	
	self.btn_4:Enable(true)

	local destr_item_index = tonumber(item.itmnum:GetText())
	local destr_item = trade_cars[destr_item_index]
	local money = db.actor:money()
	local cost = destr_item.price
	
	local str = destr_item.descript
	
	self:DrawCurCar(destr_item.section, 300, 90)
	self:DrawMoney(money, 260, 63)
	self:DrawPrice(cost, 260, 83)
	
	local first = 1
	local last = 45

	desc_box:RemoveAll()
	
	local buffer = ""
	local last_str = ""
	
	for word in string.gfind(str, "([-+/\=;:1234567890АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЬЫЪЭЮЯабвгдеёжзийклмнопрстуфхцчшщьыъэюя.,!?]+)") do
		local word_len = string.len(word)
		local buff_len = string.len(buffer)
		if (buff_len + word_len + 1) <= 45 then
			buffer = buffer.." "..word
		else
			self:AddItemToDesc(buffer)
			last_str = buffer
			buffer = ""
			buffer = buffer.." "..word
		end
	end
	if string.len(buffer) > 0 and buffer ~= last_str then
		self:AddItemToDesc(buffer)
		buffer = ""
		last_str = ""
	end	
	
	self.car_textur:Show(true)
	self.carprice:Show(true)

end


function car_trade_dialog:OnListItemDbClicked()
	self:buy_car()
end


function car_trade_dialog:buy_car()

	local console = get_console()
	local list = self:GetListWnd("list_window")	
	if list:GetSize()==0 then
		return
	end

	local index = list:GetSelectedItem()
	if index == -1 then
		self.msgbox_id = 1
		self.message_box:Init("message_box_select_item")
		self:GetHolder():start_stop_menu(self.message_box, true)
		return
	end

	local item = list:GetItem(index)
	local destr_item_index = tonumber(item.itmnum:GetText())
	local destr_item = trade_cars[destr_item_index]


	local money = db.actor:money()
	local cost = trade_cars[destr_item_index].price
	
	if money >= cost then 
		local car_item = trade_cars[destr_item_index]
		car_obj = sim:create( car_item.section, car_item.position, car_item.l_vid, car_item.g_vid)

		car_item.disabled = true
	
		db.actor:give_money(0-cost)
		
		local list_box = self:GetListWnd("list_window")
		local desc_box = self:GetListWnd("desc_window")

		self.car_textur:Show(false)
		self.carprice:Show(false)
		
--		remkit_main.play_repair_sound()

		desc_box:RemoveAll()
		list_box:RemoveAll()
		self:FillList()

		local money = db.actor:money()
		self:DrawMoney(money, 260, 63)		
		
	else
		self.msgbox_id = 1
		self.message_box:Init("message_box_cartrade_nomoney")
		self:GetHolder():start_stop_menu(self.message_box, true)	
	end

end	

function car_trade_dialog:OnKeyboard(dik, keyboard_action)
	CUIScriptWnd.OnKeyboard(self,dik,keyboard_action)
	if keyboard_action == ui_events.WINDOW_KEY_PRESSED then
-- на выход повесим Esc
		if dik == DIK_keys.DIK_ESCAPE then
			self:on_quit()
		end
		if dik == DIK_keys.DIK_NUMPAD4 then
			self:buy_car()
		end
		
	end
	return true
end


function car_trade_dialog:on_quit()
	self:GetHolder():start_stop_menu (self,true)
	self.dlg = nil
	collectgarbage("collect")
end


function car_trade_dialog:AddItemToList(item_num, item_name, item_location)
-- -- log1("Пытаемся добавить строку списка:")
	local _itm = select_car_trade_items()
	
-- -- log1("Передача индекса..." .. item_num)
	_itm.itmnum:SetText (item_num)
-- -- log1("Передача имени..." .. item_name)
	_itm.itmn:SetText (item_name)
-- -- log1("Передача локации..." .. item_location)
	_itm.itmage:SetText (item_location)
	
-- -- log1("Получаем доступ к полю списка...")
	local list_box = self:GetListWnd("list_window")
-- -- log1("Добавление строки...")
	list_box:AddItem (_itm)
-- -- log1("Строка списка добавлена")
end

function car_trade_dialog:AddItemToDesc(text)

	local _itm = select_car_descr()
	_itm.itmnum:SetText(text)
	local list_box = self:GetListWnd("desc_window")
	list_box:AddItem (_itm)
	
end




function car_trade_dialog:DrawCurCar(car, x, y)
	if not car then return end
	if x == nil then x = 0 end
	if y == nil then y = 0 end

	local a = self.car_textur
	local car_icon = get_string(car, "character_icon")
	if not a then
		self.car_textur = CUIStatic()
		a = self.car_textur
		a:SetWindowName("car_textur")
		a:SetAutoDelete(true)  
		a:InitTexture(car_icon)
		a:SetStretchTexture(true)
		self:AttachChild(a)
	end	
	if car then
		a:InitTexture(car_icon)
		a:SetStretchTexture(true)
	else
		a:Init(0,0,0,0)
	end
	a:Init(257,57,80,80)
end

function car_trade_dialog:DrawMoney(insert_text, x, y)
	if x == nil then x = 0 end
	if y == nil then y = 0 end
	local w = self.money
	if not w then
		self.money = CUI3tButton()
		w = self.money
		w:SetWindowName("money")
		w:SetAutoDelete(true)
		self:AttachChild(w) 
	end
	if insert_text then
		w:SetFont(GetFontLetterica16Russian())
		w:SetTextColor (255,255,255,255)
		w:SetText(insert_text)
		w:Init(x-100,y,200,10)
		w:SetTextAlign(CGameFont.alLeft)
	else
		w:SetText("")
		w:Init(0,0,0,0)
	end
end

function car_trade_dialog:DrawPrice(insert_text, x, y)
	if x == nil then x = 0 end
	if y == nil then y = 0 end
	local w = self.carprice
	if not w then
		self.carprice = CUI3tButton()
		w = self.carprice
		w:SetWindowName("carprice")
		w:SetAutoDelete(true)
		self:AttachChild(w) 
	end
	if insert_text then
		w:SetFont(GetFontLetterica16Russian())
		w:SetTextColor (255,255,255,255)
		w:SetText(insert_text)
		w:Init(x-100,y,200,10)
		w:SetTextAlign(CGameFont.alLeft)
	else
		w:SetText("")
		w:Init(0,0,0,0)
	end
end

function car_trade_dialog:DrawDescript(insert_text, x, y)
	if x == nil then x = 0 end
	if y == nil then y = 0 end
	local w = self.descr
	if not w then
		self.descr = CUIEditBox()
		w = self.descr
		w:SetWindowName("descr")
		w:SetAutoDelete(true)
		w:SetWidth(100);
		w:SetHeight(57);	
		self:AttachChild(w) 
	end
	if insert_text then	
		w:SetFont(GetFontLetterica18Russian())
		w:SetTextColor (255,216,186,140)
		w:SetTextAlignment(CGameFont.alLeft)
		w:SetText(insert_text)
		w:Init(x,y,100,57)
	else
		w:SetText("")
		w:Init(0,0,0,0)
	end
end

function car_trade_dialog:OnMsgYes()

	if self.msgbox_id == 1 then return end
	
	self.msgbox_id = 0
end



------------------------------------------------------------
--	Горе :(
------------------------------------------------------------

function gore_1(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "vodka", "in")
end

function gore_2(actor)
	local vodka = db.actor:object("vodka")
	if vodka then
		db.actor:eat(vodka)
	end
end

------------------------------------------------------------
--	ПРЕКОНДИШЕНЫ
------------------------------------------------------------

function military_info()
	return has_alife_info("mil_dolg_skull_sniper_end") or has_alife_info("mil_lukash_dolg_task_complete") 
end

------------------------------------------------------------
--	Спавн транспорта без покупки
------------------------------------------------------------

function transport_spawn_load()
	-- На Кордоне.																					--Вынес в all.spawn + дописал стори_айди 099 Призрак
	--car_obj = sim:create( "vehicle_zaz", vector():set(-226.2, -20.3, -158.4), 28485, 48)

	car_obj = sim:create( "vehicle_btr", vector():set(-148.15, -30.0, -383), 101494, 15)
	car_obj = sim:create( "vehicle_tr13", vector():set(9, 0.5, 280.3), 286415, 181)

	-- На Агропроме. на территории института у гаражей
	car_obj = sim:create("vehicle_moskvich2", vector():set(-143.9, -0.2, -212.7) ,93986, 677)

	-- Территория Бара
	car_obj = sim:create( "vehicle_uaz2", vector():set(413.73626, 14.3532, -414.77145), 97806, 1289)

	-- На АЭС 2
	car_obj = sim:create("vehicle_uazbuhanka",vector():set(794.17,-0.0,279.42),212718,2643)
end
