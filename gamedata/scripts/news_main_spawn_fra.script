--/ news_main_spawn.script /--
--/ Mob spawn news /--
--/ OGS Evolution Team 2009 /--
--/ Èñïîëüçîâàíû ìàòåðèàëû by sokol_jack (sokol_jack@mail.ru) /--
--/ version 0.4 /--

--/ Ìîäóëü ñîîáùåíèé î ïîÿâèâøèõñÿ ìîíñòðàõ /--


local random_news = system_ini():r_s32("options","random_news")
local spawn_message_flag = system_ini():r_s32("options","spawn_message_flag")

local spawn_komm_message_prob = 0.5 -- îáùàÿ âåðîÿòíîñòü êîììåíòàðèåâ ê ñîîáùåíèÿì î ìîíñòðàõ

local s_mob_u = 0
local s_mob_meter = 0


local level_name = {
	["l01_escape"] = {"Cordon", "au Cordon"},
	["l02_garbage"] = {"Decharge", "à la Decharge"},
	["l03_agroprom"] = {"Agroprom", "à Agroprom"},
	["l03u_agr_underground"] = {"Souterrains d'Agroprom", "dans les souterrains d'Agroprom"},
	["l04_darkvalley"] = {"Vallee Obscure", "dans la Vallee Obscure"},
	["l04u_labx18"] = {"Laboratoire X18", "au Laboratoire x18"},
	["l05_bar"] = {"Bar", "au Bar"},
	["l06_rostok"] = {"Territoires Sauvages", "aux Territoires Sauvages"},
	["l07_military"] = {"Entrepôts militaires", "aux Entrepôts militaires"},
	["l08_yantar"] = {"Yantar", "à Yantar"},
	["l08u_brainlab"] = {"Au X-18", "dans le X-18"},
	["l10_radar"] = {"Lobotomisateur", "au Lobotomisateur"},
	["l10u_bunker"] = {"Au X-10", "dans le X-10"},
	["l11_pripyat"] = {"Pripyat", "à Pripyat"},
	["l12_stancia"] = {"Chernobyl NPP", "à Chernobyl NPP"},
	["l12_stancia_2"] = {"Chernobyl NPP2", "à Chernobyl NPP2"},
	["l12u_control_monolith"] = {"Chernobyl NPP", "at the Chernobyl NPP"},
	["l12u_sarcofag"] = {"Sarcofage", "Au Sarcofage"},
	["l09_deadcity_ogse"] = {"Ville-Morte", "À la Ville-32"},
	["l13_generators_ogse"] = {"Générateurs", "Aux Générateurs"},
	["k01_darkscape_ogse"] = {"Darkscape", "À Darkscape"},
	["l22_marsh"] = {"Marais", "Aux Marais"},
	["l23_x9"] = {"Mine", "Dans la Mine"}	
}

local monster_classes = {}
monster_classes[clsid.controller_s] 	= {"controller", "un contrôleur", "plusieurs contrôleurs", "un groupe de contrôleurs", "beaucoup de contrôleurs", "un groupe de contrôleurs"}
monster_classes[clsid.chimera_s] 		= {"chimera", "une chimère", "plusieurs chimères", "un petit groupe de chimères", "un groupe of chimères", "beaucoup de chimères"}
monster_classes[clsid.poltergeist_s] 	= {"poltergeist", "un poltergeist", "plusieurs poltergeists", "un groupe de poltergeists", "une foule de poltergeists", "une réunion de poltergeists"}
monster_classes[clsid.snork_s] 			= {"snork", "un snork", "plusieurs snorks", "un groupe de snorks", "beaucoup de snorks", "plusieurs snorks"}
monster_classes[clsid.gigant_s] 		= {"pseudo_gigant", "un pseudogéant", "plusieurs pseudogéants", "un groupe de pseudogéants", "une réunion de pseudogéants", "des pseudogéants"}
monster_classes[clsid.burer_s] 			= {"burer", "un burer", "plusieurs burers", "un groupe de burers", "une foule de burers", "beaucoup de burers"}
monster_classes[clsid.bloodsucker_s] 	= {"bloodsucker", "une sangsue", "plusieurs sangsues", "un groupe de sangsues", "beaucoup de sangsues", "une foule de sangsues"}
monster_classes[clsid.zombie_s] 		= {"zombie", "un zombie", "plusieurs zombies", "un groupe of zombies", "beaucoup de zombies", "une foule de zombies"}
monster_classes[clsid.boar_s] 			= {"boar", "un sanglier", "plusieurs sangliers", "un groupe de sangliers", "un troupeau de sangliers", "un grand groupe de sangliers"}
monster_classes[clsid.cat_s] 			= {"cat", "un chat", "plusieurs chats", "un petit groupe de chats", "une bande de chats", "un grand groupe de chats"}
monster_classes[clsid.pseudodog_s] 		= {"pseudodog", "un pseudo-chien", "plusieurs pseudo-chiens", "des pseudo-chiens", "un troupeau de pseudo-chiens", "un grand groupe de pseudo-chiens"}
monster_classes[clsid.psy_dog_s] 		= {"psy_dog", "un chien-psi", "plusieurs chiens-psi", "un groupe de chiens-psi", "un troupeau de chiens-psi", "un grand groupe de chiens-psi"}
monster_classes[clsid.dog_s] 			= {"dog", "un chien aveugle", "plusieurs chiens aveugles", "des chiens aveugles", "un troupeau de chiens aveugles", "un groupe de chiens aveugles"}
monster_classes[clsid.flesh_s] 			= {"flesh", "un croque-mort", "plusieurs croque-morts", "un groupe de croque-morts", "beaucoup de croque-morts", "une foule de croque-morts"}
monster_classes[clsid.tushkano_s] 		= {"tushkano", "un tushkano", "plusieurs tushkanos", "plusieurs tushkanos", "une bande de tushkanos", "une bande de tushkanos"}
monster_classes[clsid.fracture_s] 		= {"fracture", "un izlom", "plusieurs izloms", "un groupe d'izloms", "une réunion d'izloms", "plusieurs izloms"}


local spawn_add_text_green = {
"Est-ce que quelqu'un veut aller chasser?",
"Gibier facile!",
"Quelqu'un est intéressé par de la chevrotine?"
}
local spawn_add_text_amber = {
"Est-ce qu'un brave stalker veut aller chasser?",
"Il y a beaucoup à gagner, si vous n'êtes pas lâche!",
"Chasse aux mutant! Des volontaires ? Ca ne devrait pas se faire seul, vous savez...",
"Il y a une chance de se faire du fric! Pour les courageux...",
"Il y a des os rongés ici...",
"Restez en alerte!",
"Qui vient avec moi mettre une branlée à ces saloperies?",
"On dirait que quelqu'un s'est fait bouffer...",
"Pas question que j'y aille tout seul! Je veux sauver mon cul.",
"Est-ce que quelqu'un a lancé un safari?",
"Gardez l'oeil ouvert!"
}
local spawn_add_text_red = {
"C'était proche!",
"J'ai presque cru que c'était la fin... J'ai difficilement sauvé ma peau!",
"J'ai pris un raccourci parce que la route n'est pas sûre.",
"Soyez prudents là-bas.",
"Attention!",
"Restez éloignés de cet endroit.",
"Pas question d'aller là-bas.",
"Je préfère rester peinard ici.",
"Merci à mes jambes d'avoir couru aussi vite!",
"Mares de sang... bouts de chairs... quelqu'un a passé un sale quart d'heure...",
"Qu'est-ce que vous feriez, si le vent soufflait dans LEUR sens?.. C'est la question que je me pose, MAINTENANT...",
"Pas de chance, il n'y a pas de sortie dans ces buissons...",
"Danger!"
}

local spawn_komment_text_green = {
"C'est rien d'autre qu'une perte de temps.",
"Non... C'est pas un moyen de se faire de la thune. Ca ne rembourse même pas les cartouches.",
"Tu suggères qu'on chasse ensemble? Non, je n'en suis pas. Pas le temps pour les promenades.",
"J'appelle pas ça une affaire..."
}
local spawn_komment_text_amber = {
"Tu suggères qu'on chasse ensemble? Hm... Pourquoi pas!",
"C'est comme t'as dis? Envoie les coordonnées et partons en chasse!",
"Je veux venir. C'est plus marrant de chasser en groupe!",
"Si vous acceptez, je veux venir.",
"Il y en a tellement, d'autres veulent venir pour nettoyer ce merdier ?!",
"Il y en a tellement, ça va être une vraie foire!",
"Hm... Ca tourne mal.",
"Mais d'où viennent-ils? Ils sont tellement! Il faut les abattre avant qu'il ne soit trop tard."
}
local spawn_komment_text_red = {
"Bordel... Pas moyen de mettre le nez dehors...",
"Merde! Je n'arrive pas à passer par cet endroit! Est-ce que quelqu'un est sur le même chemin? À deux on pourrait y arriver.",
"Ils sont des hordes... Mais d'où viennent-ils?..",
"Merde! qu'est-ce qu'on va faire contre ces monstres?",
"Les mecs! Peut importe leur nombre, il faut nettoyer les environs!",
"Hé! Il n'y a plus aucune route pour voyager en sécurité...",
"Comment avez-vous réussi à traverser ces monstres?!",
"Considèrez-vous comme heureux d'avoir survécu à ces saloperies..."
}

local see_word_text={
"Vu",
"Remarqué",
"Observé",
"Remarqué",
"Observé",
"Découvert",
"Tombé sur",
"Vu",
"Rencontré",
"Rencontré",
"Vu"
}

function on_spawn(obj)
if random_news == 1 then
if spawn_message_flag == 0 then return end
if isIndoor(level.name()) or isIndoor(get_object_levelname(obj)) or news_main_data.chk_Vibros() then return end
	if (obj) then
		if (_g.IsMonster(obj)) then
		
		local mob_u = {}
		mob_u.spawn_time = news_main_data.game_minutes()
		mob_u.level = get_object_levelname(obj)
		mob_u.name = get_clsid(obj) or ""
		
		if s_mob_u == 0 or s_mob_meter == 0 then
			s_mob_u = mob_u
			s_mob_meter = 1
			return
		else
			if (mob_u.spawn_time - s_mob_u.spawn_time > 5) or (mob_u.level ~= s_mob_u.level) or (mob_u.name ~= s_mob_u.name) then
				mob_spawn_news(s_mob_u.spawn_time,s_mob_u.level,s_mob_u.name,s_mob_meter)
				s_mob_u = mob_u
				s_mob_meter = 1
			else
				s_mob_meter = s_mob_meter+1
				return
			end
		end
		
	end
end
end
end

function mob_spawn_news(m_mob_spawn_time,m_mob_level,m_mob_name,m_mob_meter)
if m_mob_level == "l12u_sarcofag" or m_mob_level == "l12u_control_monolith" or m_mob_level == "l12_stancia_2" or m_mob_level == "l12_stancia" or m_mob_level == "l11_pripyat" then return end
if m_mob_level == "l10_radar" and not has_alife_info("aes_found_sarcofag") then return end
if m_mob_level == "l08_yantar" and not has_alife_info("yan_kill_brain_done") then return end
if not has_alife_info("esc_trader_can_leave") then return end
if has_alife_info("pre_blowout") then return end
	local alarm_status = "green"
	local alarm_number = 1
	local warning_status = "green"
	
	if m_mob_name == clsid.controller_s or m_mob_name == clsid.chimera_s or m_mob_name == clsid.gigant_s or m_mob_name == clsid.bloodsucker_s then alarm_status = "red"
	elseif m_mob_name == clsid.poltergeist_s or m_mob_name == clsid.snork_s or m_mob_name == clsid.burer_s or m_mob_name == clsid.psy_dog_s then alarm_status = "amber"
	else alarm_status = "green"
	end
	
	if m_mob_meter == nil or m_mob_meter == 0 then alarm_number = 1
	elseif m_mob_meter == 1 then alarm_number = 2
	elseif m_mob_meter <= 3 then alarm_number = 3
	elseif m_mob_meter <= 6 then alarm_number = 4
	elseif m_mob_meter <= 10 then alarm_number = 5
	elseif m_mob_meter > 10 then alarm_number = 6
	end

	if alarm_status == "red" then
		if alarm_number <= 2 then warning_status = "amber"
		elseif alarm_number > 2 then warning_status = "red"
		end
	elseif alarm_status == "amber" then
		if alarm_number <= 2 then warning_status = "green"
		elseif alarm_number <= 4 then warning_status = "amber"
		elseif alarm_number > 4 then warning_status = "red"
		end
	elseif alarm_status == "green" then
		if alarm_number <= 4 then warning_status = "green"
		elseif alarm_number > 4 then warning_status = "amber"
		end
	end

	if chek_warning_status(warning_status) then
		local see_time = get_see_time(m_mob_spawn_time)
		if see_time == false then return end
		local from = news_main_new.gen_names_strings()
		local see = gen_see_word()
		local level = get_level_name(m_mob_level, 2)
		local name = get_monster_name(m_mob_name, alarm_number)
		local add_text = ""
		
		if warning_status == "red" and math.random() < 0.6 then add_text = spawn_add_text_red[math.random(table.getn(spawn_add_text_red))]
		elseif warning_status == "amber" and math.random() < 0.4 then add_text = spawn_add_text_amber[math.random(table.getn(spawn_add_text_amber))]
		elseif warning_status == "green" and math.random() < 0.3 then add_text = spawn_add_text_green[math.random(table.getn(spawn_add_text_green))]
		else add_text = ""
		end
		
		local text = see_time.." "..level.." "..see.." "..name..". "..add_text
		local news_text = "%c[255,160,160,160]"..from..":\\n".."%c[default]"..text
		db.actor:give_game_news(news_text, "ui\\ui_iconsTotal", Frect():set(498,47,83,47), 0, 13000)
			
		if warning_status == "red" and (math.random() < spawn_komm_message_prob*0.9) then komment_str = spawn_komment_text_red[math.random(table.getn(spawn_komment_text_red))]
		elseif warning_status == "amber" and (math.random() < spawn_komm_message_prob*0.7) then komment_str = spawn_komment_text_amber[math.random(table.getn(spawn_komment_text_amber))]
		elseif warning_status == "green" and (math.random() < spawn_komm_message_prob*0.4) then komment_str = spawn_komment_text_green[math.random(table.getn(spawn_komment_text_green))]
		else komment_str = ""
		end
		if komment_str ~= "" then
			local from = news_main_new.gen_names_strings()
			local news_text = "%c[255,160,160,160]"..from..":\\n".."%c[default]"..komment_str
			db.actor:give_game_news(news_text, "ui\\ui_iconsTotal", Frect():set(498,47,83,47), math.random(1000,4000), 13000)
		end
		
	end
end

function get_see_time(gm_mob_spawn_time)
local msg_time = news_main_data.game_minutes()
local m_see_time = msg_time - gm_mob_spawn_time
	if msg_time - gm_mob_spawn_time < 3 then m_see_time = "il y a deux minutes"
	elseif msg_time - gm_mob_spawn_time < 10 then m_see_time = "il y a deux minutes environ"
	elseif msg_time - gm_mob_spawn_time < 20 then m_see_time = "il y a moins d'une demi-heure"
	elseif msg_time - gm_mob_spawn_time < 30 then m_see_time = "il y a une demi-heure"
	elseif msg_time - gm_mob_spawn_time < 45 then m_see_time = "il y a moins d'une heure"
	elseif msg_time - gm_mob_spawn_time < 60 then m_see_time = "il y a une heure"
	elseif msg_time - gm_mob_spawn_time < 90 then m_see_time = "il y a une heure et demie"
	elseif msg_time - gm_mob_spawn_time < 120 then m_see_time = "aujourd'hui"
	elseif msg_time - gm_mob_spawn_time >= 120 then m_see_time = false
	end
return m_see_time
end

function gen_see_word()
	local see_word = see_word_text[math.random(table.getn(see_word_text))]
	return see_word
end

function get_level_name(level_, index)
	if index == nil then index = 1 end
	local m_s_level 
	if level_ == nil then
		m_s_level = level.name()
	else
		m_s_level = level_
	end
	local m_tmp_str = ""
	if level_name[m_s_level] ~= nil then
		if (level_name[m_s_level][index] ~= nil) then
			m_tmp_str = level_name[m_s_level][index]..""
		end
	end
	return m_tmp_str
end

function get_object_levelname(obj)
	local mlevel = "null"	
	if (obj) then
		local m_game_vertex
		local nm = "nil"
		if (obj.name) then nm = obj:name() end
		if (isGameObject(obj)) then
			m_game_vertex = obj:game_vertex_id()
		else
			m_game_vertex = obj.m_game_vertex_id
		end
		if (m_game_vertex) then
			local lvert = game_graph():vertex(m_game_vertex)
			if (lvert ~= nil and lvert.level_id) then
				local lid = lvert:level_id()
				if (lid ~= nil) then
					mlevel = alife():level_name(lid)
				end
			end
			if mlevel == nil then mlevel = "nil" end
		end
	end
	return mlevel
end

function get_monster_name(gm_mob_name, index)
	local m_comm = ""
	local m_n = ""
	if index == nil then index = 1 end
		local m_clsid = gm_mob_name
		if m_clsid then
			m_comm = monster_classes[m_clsid]
			if m_comm == nil then
				m_n = ""
			else
				if (monster_classes[m_clsid][index] ~= nil) then
					m_n = monster_classes[m_clsid][index]
				end
			end
		end
	return m_n
end

function isGameObject(obj)
	local bResult = false
	if (obj and obj.fov) then
		bResult = true
	end
	return bResult
end

function chek_warning_status(warn_stat)
if spawn_message_flag == 0 then return false
elseif spawn_message_flag == 1 then
	if warn_stat == "red" then return true else return false end
elseif spawn_message_flag == 2 then
	if warn_stat == "red" or warn_stat == "amber" then return true else return false end
elseif spawn_message_flag == 3 then
	if warn_stat == "red" or warn_stat == "amber" or warn_stat == "green" then return true else return false end
else return false
end 
end