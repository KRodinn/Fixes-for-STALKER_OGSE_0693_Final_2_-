-- -*- mode: lua; coding: windows-1251-dos -*-


function attach(sm)
	sm:subscribe({ signal = "on_npc_death", fun = this.npc_on_death })
	sm:subscribe({ signal = "on_monster_death", fun = this.npc_on_death })
end

local effect_for_wpn = {
	["grenade_f1"] = "hit_fx\\hit_expl",
	["grenade_rgd5"] = "hit_fx\\hit_expl",
	["wpn_pm"] = "hit_fx\\hit_eagleu",
	["wpn_pb"] = "hit_fx\\hit_eagleu",
	["wpn_beretta"] = "hit_fx\\hit_eagleu",
	["wpn_hpsa"] = "hit_fx\\hit_eagleu",
	["wpn_tt"] = "hit_fx\\hit_eagleu",
	["wpn_bm16"] = "hit_fx\\hit_pkm",
	["wpn_toz34_short"] = "hit_fx\\hit_pkm",
	["wpn_bm16_full"] = "hit_fx\\hit_pkm",
	["wpn_toz34"] = "hit_fx\\hit_pkm",
	["wpn_wincheaster1300"] = "hit_fx\\hit_pkm",
	["wpn_winchester_m1"] = "hit_fx\\hit_pkm",
	["wpn_spas12"] = "hit_fx\\hit_pkm",
	["wpn_spas12_m1"] = "hit_fx\\hit_pkm",
	["wpn_mac10"] = "hit_fx\\hit_pkm",
	["wpn_mp40"] = "hit_fx\\hit_eagleu",
	["wpn_mp5"] = "hit_fx\\hit_eagleu",
	["wpn_mp5_m1"] = "hit_fx\\hit_eagleu",
	["wpn_mp5_m2"] = "hit_fx\\hit_eagleu",
	["wpn_ppsh41"] = "hit_fx\\hit_eagleu",
	["wpn_aks74ub"] = "hit_fx\\hit_flesh_01",
	["wpn_ak74n"] = "hit_fx\\hit_flesh_01",
	["wpn_ak102"] = "hit_fx\\hit_flesh_01",
	["wpn_g36"] = "hit_fx\\hit_flesh_01",
	["wpn_g36_m1"] = "hit_fx\\hit_flesh_01",
	["wpn_m16a1_sk1"] = "hit_fx\\hit_flesh_01",
	["wpn_fn2000"] = "hit_fx\\hit_flesh_01",
	["wpn_akm"] = "hit_fx\\hit_pkm",
	["wpn_groza"] = "hit_fx\\hit_eagleu",
	["wpn_groza_m1"] = "hit_fx\\hit_flesh_01",
	["wpn_val"] = "hit_fx\\hit_eagleu",
	["wpn_vintorez"] = "hit_fx\\hit_eagleu",
	["wpn_vintorez_m1"] = "hit_fx\\hit_eagleu", 
	["wpn_svu"] = "hit_fx\\hit_pblow",
	["wpn_svu_m1"] = "hit_fx\\hit_pblow",
	["wpn_swd"] = "hit_fx\\hit_pblow",
	["wpn_gauss"] = "hit_fx\\hit_gauss",
	["wpn_pkm"] = "hit_fx\\hit_pblow",
	["wpn_m_134"] = "hit_fx\\hit_pblow",
	["wpn_dshkm"] = "hit_fx\\hit_pblow",
	["wpn_rpg7"] = "hit_fx\\hit_expl",
	["wpn_awm"] = "hit_fx\\hit_pblow",
}

local cached = {} --таблица вида { [wpn_section] = [effect] }
function get_effect_for_curr_weapon(sect)
	local eff = effect_for_wpn[sect]
	if eff then return eff end
	--
	eff = "nil"
	if not cached[ sect ] then
		for k,v in pairs(effect_for_wpn) do
			if string.find(sect, k) then
				eff = v
				break
			end
		end
		cached[ sect ] = eff
	end
	if cached[ sect ] ~= "nil" then
		return cached[ sect ]
	else
		log3( "!![%s] Can't find effect for wpn [%s]", script_name(), sect )
	end
end

function npc_on_death(victim, who)
	local binder = victim:binded_object()
	if not binder.last_hit_data then return end
	local hd       = binder.last_hit_data
	local hit_type = hd.hit_type
	ASSERT( hit_type, "hit_type not found" )
	if not ( hit_type == hit.fire_wound or hit_type == hit.explosion ) then
	  return
  	end
	--
	local effect
	--
	if ( who:is_actor() and ( bind_statpkm.pkm_captured or ogse_car_control.in_btr ) ) or who:is_helicopter() or who:is_car() then
		effect = "hit_fx\\hit_pblow"
	else
		if not ( hd.weapon_id or hd.who_id ) then return end
		local wpn = level.object_by_id( hd.weapon_id or hd.who_id )
		if not wpn or not wpn:is_weapon() or not wpn:is_grenade() then return end
		effect = get_effect_for_curr_weapon(wpn:section())
		if not effect then return end
	end
	--
	if effect then
		action(
			victim,
			particle(effect, get_string(victim:section(), "bone_head", "bip01_head"), particle_params( vector():set(0, 0, 0.3), vector():set(0, 0, 0), vector():set(1, 0, 0) ), false),
			cond(cond.time_end, 1000)
		)
	else
		log3( "!![%s] Can't find effect for [%s]", script_name(), who:name() )
	end
end
