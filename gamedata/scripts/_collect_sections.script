-- -*- mode: lua; coding: windows-1251-dos -*-

--[[---------------------------------------------------------------------------------------
	File              : collect_sections.script
	Description       : Извлечение секций игровых объектов из кофигов
	Created           : 11.05.2014
	Last update       : 21.10.2015
	Copyright         : naxac / naxac.spaces.ru /
--]]---------------------------------------------------------------------------------------
local included = {"system.ltx"}
local sections = {}
local classes = {
	weapons = {
		[clsid.wpn_ak74]                = true,
		[clsid.wpn_ak74_s]              = true,
		[clsid.wpn_binocular]           = true,
		[clsid.wpn_binocular_s]         = true,
		[clsid.wpn_bm16]                = true,
		[clsid.wpn_bm16_s]              = true,
		[clsid.wpn_fn2000]              = true,
		[clsid.wpn_fort]                = true,
		[clsid.wpn_groza]               = true,
		[clsid.wpn_groza_s]             = true,
		[clsid.wpn_hpsa]                = true,
		[clsid.wpn_hpsa_s]              = true,
		[clsid.wpn_knife]               = true,
		[clsid.wpn_knife_s]             = true,
		[clsid.wpn_lr300]               = true,
		[clsid.wpn_lr300_s]             = true,
		[clsid.wpn_pm]                  = true,
		[clsid.wpn_pm_s]                = true,
		[clsid.wpn_rg6]                 = true,
		[clsid.wpn_rg6_s]               = true,
		[clsid.wpn_rpg7]                = true,
		[clsid.wpn_rpg7_s]              = true,
		[clsid.wpn_shotgun]             = true,
		[clsid.wpn_shotgun_s]           = true,
		[clsid.wpn_svd]                 = true,
		[clsid.wpn_svd_s]               = true,
		[clsid.wpn_svu]                 = true,
		[clsid.wpn_svu_s]               = true,
		[clsid.wpn_usp45]               = true,
		[clsid.wpn_usp45_s]             = true,
		[clsid.wpn_val]                 = true,
		[clsid.wpn_val_s]               = true,
		[clsid.wpn_vintorez]            = true,
		[clsid.wpn_vintorez_s]          = true,
		--[clsid.wpn_walther]             = true,
		--[clsid.wpn_walther_s]           = true
	},
	addons = {
		[clsid.wpn_grenade_launcher]    = true,
		[clsid.wpn_scope]               = true,
		[clsid.wpn_scope_s]             = true,
		[clsid.wpn_silencer]            = true
	},
	ammo = {
		[clsid.wpn_ammo]                = true,
		[clsid.wpn_ammo_m209]           = true,
		[clsid.wpn_ammo_og7b]           = true,
		[clsid.wpn_ammo_vog25]          = true,
		[clsid.wpn_grenade_f1]          = true,
		[clsid.wpn_grenade_fake]        = true,
		[clsid.wpn_grenade_rgd5]        = true,
		[clsid.wpn_grenade_rpg7]        = true
	},
	outfits = {
		[clsid.equ_exo]                 = true,
		[clsid.equ_military]            = true,
		[clsid.equ_scientific]          = true,
		[clsid.equ_stalker]             = true,
		[clsid.equ_stalker_s]           = true
	},
	artefacts = {
		[clsid.artefact]                = true,
		[clsid.artefact_s]              = true,
		[clsid.art_bast_artefact]       = true,
		[clsid.art_black_drops]         = true,
		[clsid.art_dummy]               = true,
		[clsid.art_electric_ball]       = true,
		[clsid.art_faded_ball]          = true,
		[clsid.art_galantine]           = true,
		[clsid.art_gravi]               = true,
		[clsid.art_gravi_black]         = true,
		[clsid.art_mercury_ball]        = true,
		[clsid.art_needles]             = true,
		[clsid.art_rusty_hair]          = true,
		[clsid.art_thorn]               = true,
		[clsid.art_zuda]                = true
	},
	mobs = {
		[clsid.bloodsucker] 			= true,
		[clsid.boar] 					= true,
		[clsid.dog_red] 				= true,
		[clsid.dog_black] 				= true,
		[clsid.flesh] 					= true,
		[clsid.burer] 					= true,
		[clsid.cat] 					= true,
		[clsid.chimera] 				= true,
		[clsid.controller] 				= true,
		[clsid.fracture] 				= true,
		[clsid.poltergeist] 			= true,
		[clsid.zombie] 					= true,
		[clsid.snork] 					= true,
		[clsid.tushkano] 				= true,
		[clsid.psy_dog] 				= true,
		[clsid.psy_dog_phantom] 		= true,	
		[clsid.pseudo_gigant] 			= true,	
		[clsid.bloodsucker_s] 			= true,
		[clsid.boar_s] 					= true,
		[clsid.dog_s] 					= true,
		[clsid.flesh_s] 				= true,
		[clsid.pseudodog_s] 			= true,
		[clsid.burer_s] 				= true,
		[clsid.cat_s] 					= true,
		[clsid.chimera_s] 				= true,
		[clsid.controller_s] 			= true,
		[clsid.fracture_s] 				= true,
		[clsid.poltergeist_s] 			= true,
		[clsid.gigant_s] 				= true,
		[clsid.zombie_s] 				= true,
		[clsid.snork_s] 				= true,
		[clsid.tushkano_s] 				= true,
		[clsid.psy_dog_s] 				= true,
		[clsid.psy_dog_phantom_s] 		= true
	},
	npc = {
		[clsid.script_stalker]			= true
	},
	anomalies = {
		[clsid.zone_acid_fog] = true,
		[clsid.zone_bfuzz] = true,
		[clsid.zone_bfuzz_s] = true,
		[clsid.zone_dead] = true,
		[clsid.zone_galant_s] = true,
		[clsid.zone_galantine] = true,
		[clsid.zone_mbald_s] = true,
		[clsid.zone_mincer] = true,
		[clsid.zone_mincer_s] = true,
		[clsid.zone_mosquito_bald] = true,
		[clsid.ameba_zone] = true,
		[clsid.zone_rusty_hair] = true,
		[clsid.torrid_zone] = true,
		[clsid.zone_radioactive] = true
	},
	items = {},
	quest_items = {},
	others = {}
}
-- В эту таблицу внести новые классы, если они добавлены в мод (см. скрипт class_registrator)
-- Добавлены некоторые классы из ЗП, модов "Народнвя Солянка" (ТЧ) и "Lost Alpha" (ТЧ)
local new_clsids = {
	cars = {'car_s'},
}
	

function main()
	-- добавим в таблицу новые классы, если они есть
	for k,t in pairs(new_clsids) do
		for _,v in ipairs(t) do
			if clsid[v] then
				if classes[k] == nil then classes[k] = {} end
				classes[k][clsid[v]] = true
			end
		end
	end

	for k in pairs(classes) do
		sections[k] = {}
	end

	this.collect()

	return sections
end

function collect()
	local fs = getFS()
	local path, file, f
	while true do
		path = included[1]
		f = fs:exist("$game_config$", path)
		if f==nil then
			log1("~~collect_sections: incorrect path for file: '%s'", path)
		elseif f.modif ~= 0 then
			file = fs:r_open("$game_config$", path)
			find_somewhat(file:r_stringZ(), path)
		else
			log1("~~collect_sections: folder 'config(s)' don't full unpacked! Path not found: [%s]", path)
		end
		table.remove(included, 1)
		if #included==0 then return true end
	end
end

-- Ищем секции и инклуды в файле
function find_somewhat(file, path)
	-- если путь многоуровневый, то сформируем путь для инклуда
	local do_path = nil
	if path:find("\\") then
		do_path = ""
		for s in string.gmatch(path, "([%w_]+)\\") do
			do_path = do_path..s.."\\"
		end
	end
	
	local sect
	for line in string.gmatch(file, "[^\n]+") do
		sect = string.match(line, "^(%b[])")
		path = string.match(line, '^#include%s+(%b"")')
		if sect then	-- нашли секцию
			sect = sect:sub(2,-2)
			if check_section(sect) then
			--	log1("- collect_sections: section found [%s]", sect)
			end
		elseif path then		-- нашли инклуд
			path = path:sub(2,-2)
			if do_path then path = do_path..path end
			--log1("- collect_sections: include file found '%s'", path)
			table.insert(included, path)
		end
	end
end

local function get_class(section, line, def)
	if sys_ini:section_exist(section) and sys_ini:line_exist(section, line) then
		return sys_ini:r_clsid(section, line)
	end
	return def
end

-- Записываем найденные секции в таблицу по группам
function check_section(sect)
	local cls = get_class(sect, "class", nil)
	if cls then
		if sys_ini:line_exist(sect, "inv_name")
			and sys_ini:line_exist(sect, "visual")
			and sys_ini:line_exist(sect, "description") then	-- inventory item
			
			if  get_bool(sect, "can_take", true) == false	-- can't take it
				or sect:find("^mp_") then -- from multiplayer
				return false
			end
			
			-- quest items
			if get_bool(sect, "quest_item", false) == true then
				table.insert(sections.quest_items, sect)
				return true
			end
			-- from table 'classes'
			for k,v in pairs(classes) do
				if v[cls] then
					table.insert(sections[k], sect)
					return true
				end
			end
			-- other items
			table.insert(sections.items, sect)
			return true
		elseif classes.mobs[cls] then		-- monster
			table.insert(sections.mobs, sect)
			return true
		elseif classes.npc[cls] then	-- stalker
			table.insert(sections.npc, sect)
			return true
		elseif classes.anomalies[cls] then	-- anomaly
			table.insert(sections.anomalies, sect)
			return true
		elseif classes.cars[cls] then		-- car
			table.insert(sections.cars, sect)
			return true
		else								-- other obect
			table.insert(sections.others, sect)
			return true
		end
	end
	return false
end
