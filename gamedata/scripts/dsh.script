------------------------------------------------------------
class "timeout_timer" ( ogse_qt.quick_timer )
function timeout_timer:__init( delay, fun) super( delay )
  self.fun = fun
end
function timeout_timer:taction()
  self.fun()
end

function timeout( delay, fun )
  local tmout = timeout_timer( delay, fun )
  tmout:start()
  return tmout
end


class "condition_timer" ( ogse_qt.quick_timer )
function condition_timer:__init( fun1, fun2, fun3 )
  self.fun1 = fun1
  self.fun2 = fun2
  self.fun3 = fun3
end
function condition_timer:condition()
  return self.fun1()
end
function condition_timer:action()
  self.fun2()
end
function condition_timer:update()
  if self.fun3 then self.fun3() end
end

function wait_condition( ... )
  local tmout = condition_timer( ... )
  tmout:start()
  return tmout
end
-------------------------------------------------------------

function set_condition( item, cond )
  item:set_condition( cond )
end

function remove_quotes( s )
  return string.gsub( s, "[«»\"\']", "" )
end

function strip_quotes( s )
  return string.gsub( s, "^%s*[«»\"\']+%s*(.+)%s*[«»\"\']+%s*$", "%1" )
end


------------------------------------------------------------------------
function attach( sm )
  sm:subscribe({ signal = "se_monster_on_before_register", fun = this.se_on_before_register })
  sm:subscribe({ signal = "se_stalker_on_before_register", fun = this.se_on_before_register })
end

local is_creating_free_mob = false
function se_on_before_register( sobj )
  if is_creating_free_mob then
    is_creating_free_mob = false
    set_none_smart_terrain( sobj )
  end
end

function set_none_smart_terrain( sobj )
  local pk = xs_netpk.monster( sobj )
  if not pk:isOk() then
    pk = xs_netpk.stalker( sobj )
  end
  if pk:isOk() then
    local data = pk:get()
    local cd   = data.custom_data:getTable()
	--log3("~~[Custom data %s]: %s", sobj:name(), cd)
    if cd.smart_terrains then
      for k, _ in pairs( cd.smart_terrains ) do
        return
      end
    end
    cd.smart_terrains = {
      [ "none" ] = "true",
    }
    data.custom_data:set( cd )
    pk:set( data )
  end
end

-- Создать свободного моба, которого не затянет в какой-нибудь гулаг.
function create_free_mob( ... )
  is_creating_free_mob = true
  return alife():create( ... )
end
------------------------------------------------------------------------


local ini_file_cache = {}
function cached_ini_file( fname )
  if not ini_file_cache[ fname ] then
    ini_file_cache[ fname ] = ini_file( fname )
  end
  return ini_file_cache[ fname ]
end
