------------------------------------------------------------
class "timeout_timer" ( ogse_qt.quick_timer )
function timeout_timer:__init( delay, fun) super( delay )
  self.fun = fun
end
function timeout_timer:taction()
  self.fun()
end

function timeout( delay, fun )
  local tmout = timeout_timer( delay, fun )
  tmout:start()
  return tmout
end
-------------------------------------------------------------

function set_condition( item, cond )
  item:set_condition( cond )
end

function remove_quotes( s )
  local  s2 = string.gsub( s, "[Ђї\"\']", "" )
  return s2
end

function strip_quotes( s )
  return string.gsub( s, "^%s*[Ђї\"\']+%s*(.+)%s*[Ђї\"\']+%s*$", "%1" )
end


--[=[----------------------------------------------------------------------
function init()
  event( "se_monster:on_before_register" ):register( se_on_before_register )
  event( "se_stalker:on_before_register" ):register( se_on_before_register )
end

local is_creating_free_mob = false
function se_on_before_register( e )
  if is_creating_free_mob then
    local sobj = e.sobj
    is_creating_free_mob = false
    set_none_smart_terrain( sobj )
  end
end

function set_none_smart_terrain( sobj )
  local pk = xs_netpk.monster( sobj )
  if not pk:isOk() then
    pk = xs_netpk.stalker( sobj )
  end
  if pk:isOk() then
    local data = pk:get()
    local cd   = data.custom_data:getTable()
    if cd.smart_terrains then
      for k, _ in pairs( cd.smart_terrains ) do
        return
      end
    end
    cd.smart_terrains = {
      [ "none" ] = "true",
    }
    data.custom_data:set( cd )
    pk:set( data )
  end
end

-- —оздать свободного моба, которого не зат€нет в какой-нибудь гулаг.
function create_free_mob( ... )
  is_creating_free_mob = true
  return alife():create( ... )
end
--]=]----------------------------------------------------------------------


---------------------------------------------------------------------------
-- 'string.lower' с поддержкой кириллицы.
-- вз€то из http://www.amk-team.ru/forum/index.php?showtopic=13216&p=959306
local ru_lower = [[йцукенгшщзхъфывапролджэ€чсмитьбюЄ]]
local ru_upper = [[…÷” ≈Ќ√Ўў«’Џ‘џ¬јѕ–ќЋƒ∆Ёя„—ћ»“№Ѕё®]]
local ru_upper_to_lower = {}
function string_lower_ru( str )
  ASSERT( str, "str is nil" )
  local ret = ""
  for s in string.gmatch( string.lower( str ), "." ) do
    ret = ret .. ( ru_upper_to_lower[ s ] or s )
  end
  return ret
end

function build_ru_upper_to_lower()
  local l = {}
  for s in string.gmatch( ru_lower, "." ) do
    table.insert( l, s )
  end
  local i = 1;
  for s in string.gmatch( ru_upper, "." ) do
    ru_upper_to_lower[ s ] = l[ i ]
    i = i + 1
  end
end
---------------------------------------------------------------------------

local ini_file_cache = {}
function cached_ini_file( fname )
  if not ini_file_cache[ fname ] then
    ini_file_cache[ fname ] = ini_file( fname )
  end
  return ini_file_cache[ fname ]
end
