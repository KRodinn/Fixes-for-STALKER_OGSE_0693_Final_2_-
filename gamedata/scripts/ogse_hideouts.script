-----------------------------------------------------------------------
--- ogse_hideouts.script
--- Модуль хранения и работы с реестром укрытий от выброса
--- Авторы: KamikaZze
--- version 1.0 (29/08/2012)
-----------------------------------------------------------------------
function attach(sm)
	sm:subscribe({signal = "on_update", fun = this.update_shelter_icon, queued = true})
	sm:subscribe({signal = "on_info", fun = this.on_info})
end


--Выброс начинается - ставим метки на укрытия. Выброс закончился - снимаем метки.
function on_info(npc, info)
	if info == "pre_blowout" or info == "net_signal" then
		for _, v in ipairs(ogsm_respawn.restrictor_list) do
			local sobj = alife():object(v.id)
			if level.name() == object_level_name(sobj) then
				local pk = xs_netpk.space_restrictor( sobj )
				if pk:isOk() then
					local data = pk:get()
					local cd = data.custom_data:getTable()
					if cd.sr_mapspot then
						if info == "pre_blowout" then
							log3("~~[%s] Adding mapspots on hideouts!", script_name())
							level_tasks.add_location_by_id(v.id, cd.sr_mapspot.location, cd.sr_mapspot.hint)
						else
							log3("~~[%s] Removing mapspots from hideouts!", script_name())
							if level.map_has_object_spot(v.id, cd.sr_mapspot.location) ~= 0 then
								level_tasks.remove_location_by_id(v.id, cd.sr_mapspot.location)
							end
						end
					end
				end
			end
		end
	end
end


local dev = device()

function update_shelter_icon()
	local hud = get_hud()
	local static_name
	if dev.aspect_ratio < 0.7 then
		static_name = "shelter_static_16"
		hud:RemoveCustomStatic("shelter_static")
	else
		static_name = "shelter_static"
		hud:RemoveCustomStatic("shelter_static_16")
	end
	
	local st = hud:AddCustomStatic(static_name, true):wnd()
	local transparency_level = npc_inside_safe_zone(db.actor) and 200 or 0
	local color = GetARGB(transparency_level,0,155,255)
	st:SetColor(color)
end


-- Нужно ли нам прятаться вообще и нервничать
function check_not_need_hide(obj)
	if obj and obj:alive() then
		for k,v in pairs(ogsm_respawn.restrictor_list) do
			local zone = level.object_by_id(v.id)
			if zone and utils.npc_in_zone(obj, zone) then
				local community, radius = ogsm_respawn.get_community_hide(v)
				if string.find(community, "fake") then
					return true
				end
			end
		end
		return false
	end
	return false
end

-- ogse_hideouts.npc_inside_safe_zone(db.actor)
-- Проверка нахождения непися в безопасной зоне
function npc_inside_safe_zone(obj)
	local location = level.name()
	
	if isIndoor(location) then
		return true
	end
	
	if obj and obj:alive() then	
		if ogse_car_control.in_btr and obj:id() == db.actor:id() then
			return true
		end
	
		for k,v in pairs(ogsm_respawn.restrictor_list) do
			local zone = level.object_by_id(v.id)
			if zone and utils.npc_in_zone(obj, zone) then
				return true
			end
		end		
	else	
		return false
	end
	return false
end