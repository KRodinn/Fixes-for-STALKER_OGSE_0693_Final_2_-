--[[ -------------------------------------------------------------------------------------
\\*Модуль*"Сон НПС"..Меченый(Стрелок).. 
File : ms_ai.script 
Description : NPC SLEEP 
Copyright : 2009 ©Меченый(Стрелок) 
Author : Меченый(Стрелок) 
Author's Optimization : OGS Evolution - team(http://deathdoor.ru/) 
]] ---------------------------------------------------------------------------------------

local t_upd = 0
--зАПОМИНАЕМ ВСЕ АЙДИ ЛАГЕРЕЙ
local camp_t = {}
-- 1 вкл сон ,0 - выкл сон
npc_sleep = 1
-- 1 вкл сидение ,0 выкл сидение
npc_sit = 1
--Дистанция Сидения
local sit_dist = 5
--Дистанция во время сна до ГГ  для изначально нейтральных Группировок
local distanse = 10
--Дистанция во время сна до ГГ  для изначально враждебных Группировок
local dist_to_bad = 40
--Время в часах после которого будут ложиться спать(т.е. если t=1 ,то лягут в 2)
local t = 1
--Время в часах перед которым будут просыпаться(т.е. если w = 6 ,то встанут в 5)
local w = 6
--Время в Часах (во сколько садиться)
local st = 2
--Время в минутах"сначало берется st"(после которого можно дремать)
local sw = 7
--Дистанция до точки при которой можно спать
local dist_to_camp_f  = 10
--Дистанция до точки при которой "виден" лагерь,следовательно идём до лагеря 
local dist_to_camp_f_m = 30
--Вывод инфы в консоль(тормозит процесс)
local dbg = 0

local next_update = nil

local forbidden = {

["l03u_agr_underground"] = true,
["l04u_labx18"] = true,
["l10_radar"] = true,
["l11_pripyat"] = true,
["l12_stancia"] = true,
["l12_stancia_2"] = true,
["l12u_control_monolith"] = true,
["l12u_sarcofag"] = true,
["l08u_brainlab"] = true,
["l23_x9"] = true,
["zombied  "] = true,
["arena_enemy  "] = true,
["trader "] = true,
["monolith  "] = true,
["killer "] = true,
["remark"] = true,
["combat"] = true,
["wounded"] = true,
["actor_dialogs"] = true,
["test"] = true,
["walker"] = true,
["patrol"] = true,
["mil_stalker0012"] = true,
["yantar_ecolog_general"] = true,
["bar_ecolog_professor"] = true,
["yan_scientist_help"] = true,
["yantar_semenov or"] = true,
["mil_freedom_member0021"] = true,
["doktor"] = true,
["doktor1 "] = true,
["dolgovazyi"] = true,
["bar_docent"] = true,
["val_bandit_krisyk"] = true,
["esc_wolf "] = true,
["esc_fanat"] = true,
["esc_fox "] = true,
["esc_ranger "] = true,
["esc_dan"] = true,
["esc_soldier_commander"] = true,
["esc_soldier_blockpost_commander "] = true,
["agr_krot "] = true,
["agr_nii_commander"] = true,
["agr_soldier_sniper_default1"] = true,
["bar_bar_osvedomitel "] = true,
["bar_bar_hunter "] = true,
["bar_bar_drunk_dolg "] = true,
["bar_bar_lisiy"] = true,
["bar_dolg_leader "] = true,
["bar_dolg_petrenko "] = true,
["bar_dolg_ivancov "] = true,
["bar_dolg_guard_commander"] = true,
["bar_stalker_freeman"] = true,
["val_bandit_borov "] = true,
["val_dolg_prisoner"] = true,
["gar_seriy"] = true,
["gar_dolg_blokpost_commander "] = true,
["gar_stalker_flame_quest"] = true

}

function forbidden_npc(npc)
	if ogse.is_quest_npc(npc) or 
	xr_companion.is_companion(npc:id()) or
	forbidden[level.name()] or
	forbidden[npc:character_community()] or
	forbidden[db.storage[npc:id()].active_scheme] or
	forbidden[npc:name()] or
	forbidden[npc:profile_name()] then
	return true else return false end	
end

function update()
   if system_ini():r_s32("options","npc_sleep") == 1 then
		local htime = level.get_time_hours()
		if (htime <= 5 or htime >= 23) and not (has_alife_info("pre_blowout") or has_alife_info("blowout")) then
			sleep_npc()
		else	
			unsleep_npc()
		end
   end
end

function unsleep_npc()
	if not next_update then
		unsleep()
		next_update = time_global() + 30000
	else
		if time_global() > next_update then
			unsleep()
			next_update = time_global() + 30000
		end
	end
end

function unsleep()
	for k, v in pairs(db.creature) do
		local npc = level.object_by_id(k)
		if v == true and npc and npc:alive() then
			local name = npc:name()
			local storage = db.storage[npc:id()]
			local scheme = storage.active_scheme
			local state = state_mgr.get_state(npc)
	  
			if scheme ~= "sleeper" and (state == "sleep" or state == "sleep_sit") then
				state_mgr.set_state( script_name(), npc, "wait", nil, nil, nil)
			end
		end
	end
end

function sleep_npc()
	if not next_update then
		sleep_manager_fun()
		build()	
		next_update = time_global() + 30000
	else
		if time_global() > next_update then
			sleep_manager_fun()
			build()	
			next_update = time_global() + 30000
		end
	end
end

function build()
	if t_upd < time_global() then
		t_upd = time_global() + 5000
		build_camp()
		if db.actor:dont_has_info("sleep_camp") then
			spawn_camp()
			db.actor:give_info_portion("sleep_camp")
		end
	end
end


function sleep_manager_fun()

local htime = level.get_time_hours()
local mtime = level.get_time_minutes()

	if npc_sleep == 1 then

		for k, v in pairs(db.creature) do
			local npc = level.object_by_id(k)
			if v == true and npc and npc:alive() and not xr_companion.is_companion(id) then
				local dist = level.vertex_position(npc:level_vertex_id()):distance_to(db.actor:position())
				if ((htime > t) and (htime < w)) and not forbidden_npc(npc) and dist>= distanse and IsNotDanger(npc) then
					if get_camp(npc) then
						local state = state_mgr.get_state(npc)
						if state ~= "sleep" and state ~= "sleep_sit" then
							state_mgr.set_state( script_name(), npc, "sleep_sit", nil, nil, {look_position = position})
						elseif state == "sleep_sit" then
							if math.random() > 0.7 then
								state_mgr.set_state( script_name(), npc, "sleep", nil, nil, {look_position = position})
							end
						elseif state == "sleep" then	
							state_mgr.set_state( script_name(), npc, "sleep", nil, nil, {look_position = position})
						end
					elseif get_camp(npc) == 0 then
						local pos, lv = get_camp_two(npc)   
						local dir = vector():set(math.random(-1,1), 0, math.random(-1,1))
						if pos then       
							local delta_dist = math.random(0,0.5)
							pos.x = pos.x + dir.x * delta_dist
							pos.z = pos.z + dir.z * delta_dist
							npc:set_dest_level_vertex_id(lv)
							local dist_pos = vector():sub(pos, level.vertex_position(lv))
							if dist_pos and dist_pos:magnitude() ~= 0 then
								dist_pos:normalize()
								npc:set_desired_direction(dist_pos)
								npc:set_path_type(game_object.level_path)
								state_mgr.set_state( script_name(), npc, "walk")
							end
						end
					end
				end
			end
		end
		
	end
	
end

function xlog(text)
local msg_no_ws = string.gsub(text, "%s", "_")    
    
    if dbg ==1 then
          text = tostring(text)
            get_console():execute("test:" .. msg_no_ws)
            get_console():execute("flush")
     end
end

function get_camp(npc) 
 local camp = level.object_by_id(v)
   for k, v in pairs(camp_t) do    
                if camp==nil then return end
                        if npc:position():distance_to(camp:position())<=dist_to_camp_f then
                         return true
                     elseif npc:position():distance_to(camp:position()) > dist_to_camp_f and npc:position():distance_to(camp:position()) < dist_to_camp_f_m then
                 return 0 
              elseif npc:position():distance_to(camp:position()) > dist_to_camp_f_m then
          return false
          end
    end
end

function build_camp()
	if npc_sleep == 1 then
		for k = 1, 65535 do
			local obj = level.object_by_id(k)
			if obj then
				local sobj = alife():object(k)
				if sobj then
					if sobj:section_name() == "camp" then
						camp_t[obj:id()] = obj:id() 
					end
				end
			end
		end
	end
end

function get_camp_two(npc)     
local camp = level.object_by_id(v)
local hlv = camp.m_level_vertex_id
local hpos = camp:position()
   for k, v in pairs(camp_t) do
         if camp==nil then return end
         if npc:position():distance_to(camp:position()) < dist_to_camp_f_m then
      return hpos, hlv
  end
 end
end

function sort_camp(npc,camp)     
  if npc:position():distance_to(camp:position())< dist_to_camp_f_m then
      return true
  end
end

function spawn_camp()
--SPAWN_V1
-- alife():create("camp",vector():set(-206.84869384766,-20.026924133301,-141.07763671875),46572,61)
-- alife():create("camp",vector():set(-205.21792602539,-22.546339035034,-128.19694519043),47862,58)
-- alife():create("camp",vector():set(-186.46701049805,-19.386562347412,-130.83993530273),64958,56)
-- alife():create("camp",vector():set(-55.985252380371,-10.040850639343,-57.904235839844),222525,77)
-- alife():create("camp",vector():set(-143.3468170166,-29.690620422363,-359.16226196289),106677,17)
-- alife():create("camp",vector():set(-119.80882263184,-30.050437927246,-387.68179321289),133787,27)
-- alife():create("camp",vector():set(-169.3210144043,-29.687189102173,-354.51403808594),80377,28)
-- alife():create("camp",vector():set(108.43910980225,-7.4149880409241,-41.521053314209),409606,124)
-- alife():create("camp",vector():set(114.58266448975,-7.4977202415466,8.5621290206909),417198,118)
-- alife():create("camp",vector():set(108.24606323242,-2.8360772132874,0.37886422872543),409663,117)
-- alife():create("camp",vector():set(-9.5632925033569,2.4783072471619,64.717002868652),267154,88)
-- alife():create("camp",vector():set(52.369983673096,2.2610585689545,156.86465454102),337683,97)
-- alife():create("camp",vector():set(2.9610588550568,0.63410866260529,256.40600585938),279730,183)
-- alife():create("camp",vector():set(133.02128601074,-0.33599254488945,311.88070678711),437620,236)
-- alife():create("camp",vector():set(133.84205627441,0.21562126278877,338.47961425781),438402,232)
-- alife():create("camp",vector():set(24.116579055786,16.555570602417,679.46459960938),303262,208)
-- alife():create("camp",vector():set(-59.22452545166,-2.3519129753113,-215.8360748291),136436,268)
-- alife():create("camp",vector():set(-223.88725280762,-8.28662109375,-133.34161376953),16998,281)
-- alife():create("camp",vector():set(71.694023132324,0.32800880074501,-146.4556427002),241631,289)
-- alife():create("camp",vector():set(-63.596649169922,0.90570902824402,5.4293918609619),134371,330)
-- alife():create("camp",vector():set(-110.60394287109,0.1464216709137,-2.2893197536469),104173,319)
-- alife():create("camp",vector():set(-95.624076843262,1.5219541788101,-30.56777381897),115354,321)
-- alife():create("camp",vector():set(70.186889648438,0.55440580844879,22.643371582031),305855,671)
-- alife():create("camp",vector():set(43.327751159668,2.4998416900635,-12.782732009888),281122,663)
-- alife():create("camp",vector():set(-2.9999635219574,2.4997630119324,14.739224433899),237466,481)
-- alife():create("camp",vector():set(-107.1102142334,0.55386853218079,-194.52908325195),132795,670)
-- alife():create("camp",vector():set(-135.58639526367,-0.00011500716209412,-201.7614440918),103229,649)
-- alife():create("camp",vector():set(-152.78143310547,1.1452896595001,-167.73248291016),85137,669)
-- alife():create("camp",vector():set(-180.58308410645,-0.0012366771697998,-181.99043273926),56003,666)
-- alife():create("camp",vector():set(-158.94342041016,1.0990880727768,-150.97686767578),78408,668)
-- alife():create("camp",vector():set(113.58681488037,-4.1231970787048,158.94485473633),277329,374)
-- alife():create("camp",vector():set(51.133785247803,0.41540959477425,228.45663452148),224231,359)
-- alife():create("camp",vector():set(174.18296813965,0.098346829414368,43.993263244629),44089,1258)
-- alife():create("camp",vector():set(133.07608032227,0.12208041548729,59.708198547363),36438,1227)
-- alife():create("camp",vector():set(111.09022521973,0.099172085523605,72.966644287109),33195,1225)
-- alife():create("camp",vector():set(206.56661987305,-0.0044415295124054,87.553161621094),49966,1193)
-- alife():create("camp",vector():set(198.96890258789,-0.0024316012859344,119.82023620605),47414,1190)
-- alife():create("camp",vector():set(230.19686889648,-5.4483418464661,130.353515625),58844,1200)
-- alife():create("camp",vector():set(113.37875366211,-0.011309415102005,122.87298583984),33472,1213)
-- alife():create("camp",vector():set(-157.9415435791,-0.0018086135387421,182.61831665039),36619,1329)
-- alife():create("camp",vector():set(-262.47634887695,-0.0078690946102142,15.169801712036),5980,1395)
-- alife():create("camp",vector():set(158.74287414551,-7.601282119751,-93.975784301758),128734,1451)
-- alife():create("camp",vector():set(33.990028381348,-11.729088783264,-277.89688110352),56085,1480)
-- alife():create("camp",vector():set(-236.95484924316,-12.655252456665,51.559539794922),94835,1680)
-- alife():create("camp",vector():set(-92.680450439453,-20.869451522827,216.87532043457),221997,1734)
-- alife():create("camp",vector():set(10.083930015564,-7.296706199646,19.649251937866),317167,1582)
-- alife():create("camp",vector():set(18.005672454834,-6.7112212181091,-31.826107025146),323605,1585)
-- alife():create("camp",vector():set(-53.90465927124,-6.7876105308533,-20.828094482422),256000,1605)
-- alife():create("camp",vector():set(-59.629615783691,-10.490412712097,22.950223922729),251202,1608)
-- alife():create("camp",vector():set(-176.22579956055,-16.047105789185,377.75119018555),146638,1859)
-- alife():create("camp",vector():set(-351.30752563477,-13.899461746216,394.1545715332),6395,1848)
-- alife():create("camp",vector():set(-217.4860534668,-21.829000473022,202.31617736816),111417,1765)
-- alife():create("camp",vector():set(-154.81773376465,1.0544230937958,-186.83758544922),9738,862)
-- alife():create("camp",vector():set(-134.86584472656,0.97560572624207,-519.26574707031),22706,832)
-- alife():create("camp",vector():set(126.56376647949,0.15240952372551,-246.18029785156),323801,956)
-- alife():create("camp",vector():set(144.36837768555,0.21820452809334,-232.51705932617),342790,958)
-- alife():create("camp",vector():set(142.24237060547,0.46159145236015,-271.34854125977),340225,961)
-- alife():create("camp",vector():set(97.618629455566,0.69760227203369,-3.710520029068),293339,984)
-- alife():create("camp",vector():set(0.73581898212433,0.084878474473953,38.765018463135),174910,1010)
-- alife():create("camp",vector():set(33.533767700195,0.33740696310997,-3.5320835113525),215868,1027)
-- alife():create("camp",vector():set(20.314649581909,1.9589546918869,-20.368362426758),198913,1050)
-- alife():create("camp",vector():set(17.582653045654,1.9556835889816,-37.076713562012),195229,1050)
-- alife():create("camp",vector():set(40.733303070068,11.580855369568,-31.223527908325),225408,1062)
-- alife():create("camp",vector():set(34.369258880615,11.581979751587,-54.427471160889),216702,1067)
-- alife():create("camp",vector():set(47.680126190186,1.0179283618927,-52.597179412842),234652,1083)
-- alife():create("camp",vector():set(37.802169799805,0.37805172801018,-76.506454467773),221498,1081)
-- alife():create("camp",vector():set(22.118211746216,5.180600643158,-73.459732055664),201639,1101)
-- alife():create("camp",vector():set(-2.207582950592,0.095368087291718,-69.437957763672),171562,1041)
--SPAWN_V2
	ogse.spawn_objects(ogse_spawn_db.script_spawn_registry.ms_ai.camps)

end


function IsNotDanger(npc)
  if not npc:best_enemy() then
    return true
     else
       return false
  end
end

