-- -*- mode: lua; coding: windows-1251-dos -*-


function attach(sm)
	sm:subscribe({ signal = "on_spawn", fun = this.on_spawn })
	sm:subscribe({ signal = "on_first_update", fun = this.on_first_update })
end

function on_spawn()
	del_buggy_objects()
	del_buggy_mapspots()
	del_all_trunks() --Убрать с НИ.
	fix_dsh_rukzak_storage() --Убрать с НИ.

	lc_question_add() --С НИ перенести на событие начала игры и всё, больше никогда не вызывать.
	fix_gar_boars_territory2_logic() --тоже самое.
	--fix_yan_st_stalker3_kamp_1() --тоже самое
	fix_mg_smarts() --тоже самое
	--
	fix_bandit_trader()
	--
	fix_wpn_flame_in_rukzak()
	--
	fix_prizrak_trup()
	--
	fix_fourth_neutral_trup()
	--
	fix_yantar_guider()
end

function on_first_update()
	aem_fix() --Удалить по окончании игры! С НИ ЭТО НЕ НУЖНО!
	--
	fix_mg_respawners() --Снести с НИ
	--
	fix_crazy_respawn()
	--
	fix_monsters_spawn()
end


function fix_bandit_trader() --Телепорт торгаша бандитов на место.
  if ogse.var_exists("fix_bandit_trader") then return end
  --
  for id, sobj in alife():objects() do --У него нет ни нормального стори_айди, ни уникального имени, поэтому так.
	if sobj:section_name() == "bandit_trader_spawn" then
      local patrol = patrol( "bandit_trader_walk" )
      alife():teleport_object(
        id, patrol:point( 0 ),
        patrol:level_vertex_id( 0 ), patrol:game_vertex_id( 0 )
      )
	  log3("--KRodin: bandit trader teleported to pos = {%s,%s,%s}, lvid = %s, gvid = %s", patrol:point( 0 ).x, patrol:point( 0 ).y, patrol:point( 0 ).z, patrol:level_vertex_id( 0 ), patrol:game_vertex_id( 0 ) )
    end
  end
  --
  ogse.save_var("fix_bandit_trader", true)
end


function fix_yantar_guider()
  local sobj = alife():object("yantar_guider")
  if not sobj then return end
  --
  local patrol = patrol( "yan_scientist_guider_walk" )
  alife():teleport_object(
    sobj.id, patrol:point( 0 ),
    patrol:level_vertex_id( 0 ), patrol:game_vertex_id( 0 )
  )
  log3("--KRodin: yantar guider teleported to pos = {%s,%s,%s}, lvid = %s, gvid = %s", patrol:point( 0 ).x, patrol:point( 0 ).y, patrol:point( 0 ).z, patrol:level_vertex_id( 0 ), patrol:game_vertex_id( 0 ) )
end


function fix_wpn_flame_in_rukzak() --KRodin: Фикс моей невнимательности
	if ogse.var_exists("fix_wpn_flame_in_rukzak") then return end
	--
	for _, k in ipairs( ogse_unist.get_all_names() ) do
		local id = string.match( k, "^dsh_rukzak%.([^.]+)%.sections$" )
		if id then
			id = tonumber( id )
			local items = dsh_rukzak.load_rukzak( id )
			local fixed = false
			for i=1, #items do
				local item = items[i]
				if item.section == "wpn_flame" then
					local str = item.info:sub(2)
					item.info = "0"..str
					--
					fixed = true
				end
			end
			if fixed then
				dsh_rukzak.save_rukzak( id, items )
			end
		end
	end
	--
	ogse.save_var("fix_wpn_flame_in_rukzak", true)
end


--KRodin: поправил пропажу Призрака. Пропажа трупов правится в другом месте, и требует НИ.
--Поэтому будем извращаться, чтоб сохранить совместимость сейвов.
function fix_prizrak_trup()
	local lost_sobj = alife():story_object( story_ids.yan_ghost )
	if not lost_sobj and not has_alife_info("yan_has_ghost_pda") then --Трупа нет и его ещё не обыскали
		local sobj = alife():create("stalker", vector():set(-100.799301147461, 5.60592746734619, -23.0884437561035), 717, 1583)
		--
		local pk = get_netpk(sobj)
		ASSERT( pk:isOk(), "can't read netpacket of %s", sobj:name() )
		local data = pk:get()
		data.health = 0
		data.upd.health = 0
		data.visual_name = "actors\\neytral\\stalker_prizrak"
		local custom_data_string = "[logic] \nactive = nil \n[known_info] \nyan_has_ghost_pda \n[smart_terrains] \nnone = true"
		data.custom_data:setString(custom_data_string)
		pk:set(data)
		--
		alife():assign_story_id(sobj.id, story_ids.yan_ghost)
		--
		ogse.spawn_item_in_inv("wpn_val", sobj) 
		ogse.spawn_item_in_inv("ammo_9x39_ap", sobj) 
		ogse.spawn_item_in_inv("lab_x16_documents", sobj) 
		ogse.spawn_item_in_inv("outfit_stalker_m1", sobj) 
		--
		log3("--[%s] prizrak trup fixed!", script_name())
	end
end


function fix_crazy_respawn() --KRodin: Ещё один фикс моей невнимательности.
  if ogse.var_exists("fix_crazy_respawn") then return end
  --
  dsh_respawn.iterate_respawners( function( respawner )
    if respawner.item_spawn and #respawner.spawned_obj > 0 then
      local ids = {}
      for _, id in ipairs( respawner.spawned_obj ) do
        table.insert( ids, id )
      end
      for _, id in ipairs( ids ) do
        respawner:remove_spawned( id )
        local sobj = alife():object( id )
        if sobj then
          log3("~~[%s] removed object [%s] from respawner [%s]", script_name(), sobj:name(), respawner.name)
          alife():release(sobj, true) --Удаляем все лишние предметы, что наплодил респавнер.
        end
      end
      dsh_respawn.spawn(respawner.name) --спавним нормальное кол-во предметов.
    end
  end )
  --
  ogse.save_var("fix_crazy_respawn", true)
end


function fix_monsters_spawn()
  if ogse.var_exists("fix_monsters_spawn") then return end
  --
  ogsm_respawn.first_run()
  --
  ogse.save_var("fix_monsters_spawn", true)
end


function fix_fourth_neutral_trup()
	local lost_sobj = alife():story_object( story_ids.fourth_neutral )
	if not lost_sobj and not has_alife_info("boltun_nayden") then --Трупа нет и его ещё не обыскали
		local sobj = alife():create("stalker", vector():set(-219.779998779297, 8.10000038146973, -337.399993896484), 158437, 3065)
		--
		local pk = get_netpk(sobj)
		ASSERT( pk:isOk(), "can't read netpacket of %s", sobj:name() )
		local data = pk:get()
		data.health = 0
		data.upd.health = 0
		data.visual_name = "actors\\soldier\\soldier_spetsnaz"
		local custom_data_string = "[spawner] \ncond = {+hunter_about_boltun} \n[known_info] \nboltun_nayden \n[smart_terrains] \nnone = true"
		data.custom_data:setString(custom_data_string)
		pk:set(data)
		--
		alife():assign_story_id(sobj.id, story_ids.fourth_neutral)
		--
		ogse.spawn_item_in_inv("klondaik_flash_4", sobj) 
		--
		log3("--[%s] fourth_neutral trup fixed!", script_name())
	end
end


function fix_yan_st_stalker3_kamp_1()
  if ogse.var_exists("fix_yan_st_stalker3_kamp_1") then return end
  local p = patrol( "yan_st_stalker3_kamp_1" )
  dsh.create_campfire(
    p:point( 0 ), p:level_vertex_id( 0 ), p:game_vertex_id( 0 ),
    "objects\\koster_palki_nastil", 0.7
  )
  ogse.save_var("fix_yan_st_stalker3_kamp_1", true)
end

function fix_mg_respawners()
	if has_alife_info("master_quest_soup_ready") then
		--Релизим респавнеры зомбаков в МГ, больше они не нужны.
		local del_respawners = { "deadcity_zombied_respawn_1", "deadcity_zombied_respawn_2", "deadcity_contoler_respawn_1" }
		for _, name in pairs(del_respawners) do
			local sobj = alife():object( name )
			if sobj then
				dsh_respawn.release_respawner_by_name( name )
				log3( "--[ogse_fixes] Released respawner [%s]", name )
			end
		end
	end
end

function fix_mg_smarts()
	if has_alife_info("master_quest_soup_ready") and not ogse.var_exists("fix_mg_smarts") then
		for i=1, 6 do
			local smart = alife():object("deadcity_zombies_"..i)
			smart:remove_gulag()
		end
		ogse.save_var("fix_mg_smarts", true)
	end
end

function fix_dsh_rukzak_storage( ver )
  if ogse.var_exists("fix_dsh_rukzak_storage") then return end
  for _, k in ipairs( ogse_unist.get_all_names() ) do
    local id = string.match( k, "^dsh_rukzak%.([^.]+)%.sections$" )
    if id then
      id = tonumber( id )
      local items = dsh_rukzak.load_rukzak( id )
      log3(
        "[%s]: change storage type of dsh_rukzak: %s",
        script_name(), id
      )
      dsh_rukzak.save_rukzak( id, items )
    end
  end
  ogse.save_var("fix_dsh_rukzak_storage", true)
end

function del_all_trunks()
	if ogse.var_exists("TRUNK_FIX") then return end
	for id, sobj in alife():objects() do
		if sobj:section_name() == "trunk_box" then
			log3( "~~[%s]: Found trunk [%s], removing...", script_name(), sobj:name() )
			alife():release(sobj, true)
		end
	end
	ogse.save_var("TRUNK_FIX", true)
end


function fix_gar_boars_territory2_logic() --Исправление кривой логики рестриктора на свалке. Ему вообще не нужна логика.
	if ogse.var_exists("gar_boars_territory2_fix") then return end
	local sobj = alife():object("gar_boars_territory2")
	if sobj then
		sobj.custom_data = ""
		log3( "--[%s]: Fixed logic in restrictor [%s]!", script_name(), sobj:name() )
	end
	ogse.save_var("gar_boars_territory2_fix", true)
end

function lc_question_add() --Переход "Припять - ЧАЭС" задаёт вопрос о смене уровня. Взято из аддона Naxac'а
	local sobj = alife():object("exit_to_stancia_01")
	if sobj then
		local pk = get_netpk(sobj, 1)
		ASSERT( pk:isOk(), "can't read netpacket of %s", sobj:name() )
		local data = pk:get()
		if data.silent_mode ~= 0 then
			data.silent_mode = 0
			pk:set(data)
			log3( "~~[%s]: fixed ['exit_to_stancia_01']...", script_name() )
		end
	end
end


function aem_fix()
	if not ogse.var_exists("AEM_FIX") then
		for k, v in pairs( db.storage[db.actor:id()].pstor ) do
			if string.find(k, "aem") then
				if k == "aem_id" then
					local sobj = alife():object(v)
					if sobj then
						log3( "~~[%s]: found [%s], removing...", script_name(), sobj:name() )
						alife():release(sobj, true)
					end
				end
				if db.storage[db.actor:id()].pstor[k] then
					log3("~~[%s]: REMOVING FROM PSTOR: [%s]", script_name(), k)
					db.storage[db.actor:id()].pstor[k] = nil
				end
			end
		end
		ogse.save_var("AEM_FIX", true)
	end
end


function del_buggy_objects() --Удаление из игры глючных объектов
	local names = {
----Рестрикторы постоянных звуков стрельбы в Припяти----
		"pri_ambient_battle_sound_zone_0000",
		"pri_ambient_battle_sound_zone_0001",
		"pri_ambient_battle_sound_zone_0002",
		"pri_ambient_battle_sound_zone_0003",
--------------------------------------------------------
-----Рестрикторы постоянных звуков стрельбы на ЧАЭС-----
		"aes_space_restrictor_sound_battle_0000",
		"aes_space_restrictor_sound_battle_0001",
--------------------------------------------------------
		"sar_enter_zone", --Рестриктор, воспроизводящий "зов Монолита" в Саркофаге
		"mil_physic_object_0127", --глючно заспавненная модель автомата на АС
----Рестрикторы схемы sr_no_weapon, которая отключена---
		"aes2_space_restrictor_no_weapon",
		"yan_no_weapon_restr",
		"bar_no_weapon_zone",
		"esc_guns_remontnik_zone_no_weapon",
		"trader_zone",
--------------------------------------------------------
----------Рестрикторы удалённой схемы sr_sleep----------
		"rad_sleep_room",
		"mil_sr_sleep_1",
--------------------------------------------------------
		"val_sacrifice_danger_zone", --Рестриктор удалённой схемы sr_danger
		"mbox_generator", --какая-то хрень на кордоне. Видать, что-то тестовое, не доделанное
		"rosros_cutscene", --Рестриктор, запускающий облет камеры на ДТ
	}
	for _, n in ipairs( names ) do
		local sobj = alife():object( n )
		if sobj then
			log3( "~~[%s]: found [%s], removing...", script_name(), sobj:name() )
			alife():release(sobj, true)
		end
	end
end

function del_buggy_mapspots() --Удаление глючных меток с карты.
	--if has_alife_info("agr_find_gunslinger_cache_final")
	--and level_tasks.is_map_spot_present(story_ids.agr_zaz, "green_location") then
	--	level_tasks.remove_location_by_sid(story_ids.agr_zaz, "green_location") --Глючная метка "Выбраться из подземелья" на Агро.
	--end
	if has_alife_info("gar_free_pass")
	and level_tasks.is_map_spot_present(115, "green_location") then
		level_tasks.remove_location_by_sid(115, "green_location") --Вечная метка на Прапора на свалке
	end
	if has_alife_info("labx16_find")
	and level_tasks.is_map_spot_present(story_ids.yan_mapspot_from_vasilyev, "green_location") then
		level_tasks.remove_location_by_sid(story_ids.yan_mapspot_from_vasilyev, "green_location") --Вечная метка "Проникнуть в лабораторию X-16" на янтаре
	end
	if has_alife_info("mil_dolg_dead")
	and level_tasks.is_map_spot_present(story_ids.Mil_Dolg_Zoneguard, "crlc_mdl") then
		level_tasks.remove_location_by_sid(story_ids.Mil_Dolg_Zoneguard, "crlc_mdl") --Вечная метка "Уничтожить отряд Долга" на АС
	end
	if has_alife_info("mil_max_job_complete")
	and level_tasks.is_map_spot_present(story_ids.Mil_Master_Max, "blue_location") then
		level_tasks.remove_location_by_sid(story_ids.Mil_Master_Max, "blue_location") --Вечная метка "Отдать флэшку Максу" на АС
	end
	if has_alife_info("pri_stadium_reached")
	and level_tasks.is_map_spot_present(story_ids.pri_stadium_entrance, "green_location") then
		level_tasks.remove_location_by_sid(story_ids.pri_stadium_entrance, "green_location") --Вечная метка "Найти выход на ЧАЭС"
	end
	if has_alife_info("aes_found_sarcofag")
	and level_tasks.is_map_spot_present(story_ids.aes_sarcofag, "green_location") then
		level_tasks.remove_location_by_sid(story_ids.aes_sarcofag, "green_location") --Вечная метка "Вход в Саркофаг"
	end
	if has_alife_info("sar_enter_command_center")
	and level_tasks.is_map_spot_present(story_ids.sar_monolith, "green_location") then
		level_tasks.remove_location_by_sid(story_ids.sar_monolith, "green_location") --Вечная метка "Исполнитель желаний"
	end
	if has_alife_info("sar_finish_decoding")
	and level_tasks.is_map_spot_present(story_ids.sar_secret_door, "green_location") then
		level_tasks.remove_location_by_sid(story_ids.sar_secret_door, "green_location") --Вечная метка на кодовую дверь в саркофаге
	end
	if has_alife_info("val_escort_scene_end")
	and level_tasks.is_map_spot_present(story_ids.val_escort_captive, "green_location") then
		level_tasks.remove_location_by_sid(story_ids.val_escort_captive, "green_location") --Вечная метка на долговце, которого спасаем с Пулей.
	end

	if has_alife_info("freeplay") then
		if level_tasks.is_map_spot_present(story_ids.warlab_dolg_commander, "green_location") then
			level_tasks.remove_location_by_sid(story_ids.warlab_dolg_commander, "green_location") --Вечная метка на командира отряда Долга на Генераторах
		end
		if level_tasks.is_map_spot_present(story_ids.warlab_freedom_commander, "green_location") then
			level_tasks.remove_location_by_sid(story_ids.warlab_freedom_commander, "green_location") --Вечная метка на командира отряда Свободы на Генераторах
		end
		if level_tasks.is_map_spot_present(story_ids.warlab_heli_commander, "green_location") then
			level_tasks.remove_location_by_sid(story_ids.warlab_heli_commander, "green_location") --Вечная метка на ударную группу вертолётов на Генераторах
		end
		if level_tasks.is_map_spot_present(story_ids.warlab_secret_entrance, "green_location") then
			level_tasks.remove_location_by_sid(story_ids.warlab_secret_entrance, "green_location") --Вечная метка на дренажную трубу комплекса на Генераторах
		end
	end
end
