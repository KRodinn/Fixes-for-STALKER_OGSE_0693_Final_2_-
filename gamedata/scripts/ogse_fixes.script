
function attach(sm)
	sm:subscribe({ signal = "on_first_update",	fun = this.on_first_update })
end

function on_first_update()
	del_buggy_objects()
	del_buggy_mapspots()

	aem_fix() --Удалить по окончании игры нахер! С НИ ЭТО НЕ НУЖНО!
end


function aem_fix() --Удалить по окончании игры нахер! С НИ ЭТО НЕ НУЖНО!
	if not ogse.var_exists("AEM_FIX") then
		for k, v in pairs( db.storage[db.actor:id()].pstor ) do
			if string.find(k, "aem") then
				if k == "aem_id" then
					local sobj = alife():object(v)
					if sobj then
						log3( "~~KRodin: found [%s], removing...", sobj:name() )
						alife():release(sobj, true)
					end
				end
				if db.storage[db.actor:id()].pstor[k] then
					log3("!!REMOVING FROM PSTOR: [%s]", k)
					db.storage[db.actor:id()].pstor[k] = nil
				end
			end
		end
		ogse.save_var("AEM_FIX", true)
	end
end


function del_buggy_objects() --Удаление из игры глючных объектов
	local names = {
----Рестрикторы постоянных звуков стрельбы в Припяти----
		"pri_ambient_battle_sound_zone_0000",
		"pri_ambient_battle_sound_zone_0001",
		"pri_ambient_battle_sound_zone_0002",
		"pri_ambient_battle_sound_zone_0003",
--------------------------------------------------------
-----Рестрикторы постоянных звуков стрельбы на ЧАЭС-----
		"aes_space_restrictor_sound_battle_0000",
		"aes_space_restrictor_sound_battle_0001",
--------------------------------------------------------
		"sar_enter_zone", --Рестриктор, воспроизводящий "зов Монолита" в Саркофаге
		"mil_physic_object_0127", --глючно заспавненная модель автомата на АС
----Рестрикторы схемы sr_no_weapon, которая отключена---
		"aes2_space_restrictor_no_weapon",
		"yan_no_weapon_restr",
		"bar_no_weapon_zone",
		"esc_guns_remontnik_zone_no_weapon",
		"trader_zone",
--------------------------------------------------------
----------Рестрикторы удалённой схемы sr_sleep----------
		"rad_sleep_room",
		"mil_sr_sleep_1",
--------------------------------------------------------
	}
	for _, n in ipairs( names ) do
		local sobj = alife():object( n )
		if sobj then
			log3( "~~KRodin: found [%s], removing...", sobj:name() )
			alife():release( sobj )
		end
	end
end

function del_buggy_mapspots() --Удаление глючных меток с карты, и не только...
	if has_alife_info("agr_find_gunslinger_cache_final")
	and level_tasks.is_map_spot_present(story_ids.agr_zaz, "green_location") then
		level_tasks.remove_location_by_sid(story_ids.agr_zaz, "green_location") --Глючная метка "Выбраться из подземелья" на Агро.
	end
	if has_alife_info("gar_free_pass")
	and level_tasks.is_map_spot_present(115, "green_location") then
		level_tasks.remove_location_by_sid(115, "green_location") --Вечная метка на Прапора на свалке
	end
	if has_alife_info("labx16_find")
	and level_tasks.is_map_spot_present(story_ids.yan_mapspot_from_vasilyev, "green_location") then
		level_tasks.remove_location_by_sid(story_ids.yan_mapspot_from_vasilyev, "green_location") --Вечная метка "Проникнуть в лабораторию X-16" на янтаре
	end
	if has_alife_info("mil_dolg_dead")
	and level_tasks.is_map_spot_present(story_ids.Mil_Dolg_Zoneguard, "crlc_mdl") then
		level_tasks.remove_location_by_sid(story_ids.Mil_Dolg_Zoneguard, "crlc_mdl") --Вечная метка "Уничтожить отряд Долга" на АС
	end
	if has_alife_info("mil_max_job_complete")
	and level_tasks.is_map_spot_present(story_ids.Mil_Master_Max, "blue_location") then
		level_tasks.remove_location_by_sid(story_ids.Mil_Master_Max, "blue_location") --Вечная метка "Отдать флэшку Максу" на АС
	end
	if has_alife_info("btr_own_freedom")
	and db.actor:object("quest_btr_keys") then
		ogse.remove_inv_items_by_section("quest_btr_keys", 1) --удаляем ключ от БТРа из инвентаря актора (который почему-то вовремя не удалился)
	end
	if has_alife_info("pri_stadium_reached")
	and level_tasks.is_map_spot_present(story_ids.pri_stadium_entrance, "green_location") then
		level_tasks.remove_location_by_sid(story_ids.pri_stadium_entrance, "green_location") --Вечная метка "Найти выход на ЧАЭС"
	end
	if has_alife_info("aes_found_sarcofag")
	and level_tasks.is_map_spot_present(story_ids.aes_sarcofag, "green_location") then
		level_tasks.remove_location_by_sid(story_ids.aes_sarcofag, "green_location") --Вечная метка "Вход в Саркофаг"
	end
	if has_alife_info("sar_enter_command_center")
	and level_tasks.is_map_spot_present(story_ids.sar_monolith, "green_location") then
		level_tasks.remove_location_by_sid(story_ids.sar_monolith, "green_location") --Вечная метка "Исполнитель желаний"
	end
	if has_alife_info("sar_finish_decoding")
	and level_tasks.is_map_spot_present(story_ids.sar_secret_door, "green_location") then
		level_tasks.remove_location_by_sid(story_ids.sar_secret_door, "green_location") --Вечная метка на кодовую дверь в саркофаге
	end

	if has_alife_info("freeplay") then
		if level_tasks.is_map_spot_present(story_ids.warlab_dolg_commander, "green_location") then
			level_tasks.remove_location_by_sid(story_ids.warlab_dolg_commander, "green_location") --Вечная метка на командира отряда Долга на Генераторах
		end
		if level_tasks.is_map_spot_present(story_ids.warlab_freedom_commander, "green_location") then
			level_tasks.remove_location_by_sid(story_ids.warlab_freedom_commander, "green_location") --Вечная метка на командира отряда Свободы на Генераторах
		end
		if level_tasks.is_map_spot_present(story_ids.warlab_heli_commander, "green_location") then
			level_tasks.remove_location_by_sid(story_ids.warlab_heli_commander, "green_location") --Вечная метка на ударную группу вертолётов на Генераторах
		end
		if level_tasks.is_map_spot_present(story_ids.warlab_secret_entrance, "green_location") then
			level_tasks.remove_location_by_sid(story_ids.warlab_secret_entrance, "green_location") --Вечная метка на дренажную трубу комплекса на Генераторах
		end
	end
end
