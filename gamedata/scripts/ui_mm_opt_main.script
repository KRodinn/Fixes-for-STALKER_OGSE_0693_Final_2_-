-- -*- mode: lua; coding: windows-1251-dos -*-

-- file:		UI_MM_OPT_MAIN.script
-- created:		01.07.2005
-- description:	options dialog
-- author:		Serge Vynnychenko

opt_wnd = nil

class "options_dialog" (CUIScriptWnd)
function options_dialog:__init() super()
	opt_wnd = self
	self:SetFont(GetFontMedium()) --set base font for dialog.

	self.m_preconditions = {}
   
    self:InitControls()
    self:InitCallBacks()
	--log1("--options_dialog:__init()")
end
function options_dialog:__finalize()
	--log1("~~options_dialog:__finalize()")
end

hint_name = nil
hint_caption = nil
local current_view = nil

function options_dialog:InitControls()	
	self:Init(0,0,1024,768)
	self:Enable(true)
	
	local xml = CScriptXmlInit()
	xml:ParseFile("ui_mm_opt.xml")
	
	xml:InitStatic("background", self)
	self.dialog = xml:InitStatic("main_dialog:dialog", self)
	
	self.hint		= xml:InitFrame				("frame_hint", self)
	hint_name		= xml:InitStatic			("hint_name", self)
	hint_caption	= xml:InitStatic			("hint_caption", self)	
	current_view 	= 1
	
	xml:InitStatic("main_dialog:cap_options", self.dialog)
		
	self.dlg_video = ui_mm_opt_video.opt_video()
	self.dlg_video:InitControls(55,74, xml, self)
	self.dialog:AttachChild(self.dlg_video)

	self.dlg_sound = ui_mm_opt_sound.opt_sound()
	self.dlg_sound:InitControls(55,74, xml)
	self.dlg_sound:Show(false)
	self.dialog:AttachChild(self.dlg_sound)
	
	self.dlg_gameplay = ui_mm_opt_gameplay.opt_gameplay()
	self.dlg_gameplay:InitControls(55,74, xml)
	self.dlg_gameplay:Show(false)
	self.dialog:AttachChild(self.dlg_gameplay)
	
	self.dlg_controls = ui_mm_opt_controls.opt_controls()
	self.dlg_controls:InitControls(55,74, xml, self)
	self.dlg_controls:Show(false)
	self.dialog:AttachChild(self.dlg_controls)

	self.dlg_video_adv = ui_mm_opt_video_adv.opt_video_adv()
	self.dlg_video_adv:InitControls(55,74, xml, self)
	self.dlg_video_adv:Show(false)
	self.dialog:AttachChild(self.dlg_video_adv)

	local btn_acpt = xml:Init3tButton("main_dialog:btn_accept", self.dialog)
	self:Register(btn_acpt, "btn_accept")
	local btn_cncl = xml:Init3tButton("main_dialog:btn_cancel", self.dialog)
	self:Register(btn_cncl, "btn_cancel")
	
	self.tab = xml:InitTab("main_dialog:tab", self.dialog)
	self:Register(self.tab, "tab")

	self.message_box = CUIMessageBoxEx()
	
	self.b_r2_restart_shown		= false
end

function options_dialog:UpdateControls()
	local opt = COptionsManager()

	opt:SetCurrentValues("mm_opt_video_preset")
	opt:SaveBackupValues("mm_opt_video_preset")

	opt:SetCurrentValues("mm_opt_video")
	opt:SaveBackupValues("mm_opt_video")
	
	opt:SetCurrentValues("mm_opt_video_adv")
	opt:SaveBackupValues("mm_opt_video_adv")

	opt:SetCurrentValues("mm_opt_gameplay")
	opt:SaveBackupValues("mm_opt_gameplay")

	opt:SetCurrentValues("mm_opt_sound")
	opt:SaveBackupValues("mm_opt_sound")

	opt:SetCurrentValues("mm_opt_controls")

	opt:SetCurrentValues("key_binding")

	self:UpdateDependControls()
end

function options_dialog:UpdateDependControls()
	local _current_id = 2 
	for i, j in pairs(self.m_preconditions) do
		j(i, _current_id)
	end
end

function options_dialog:InitCallBacks()
	self:AddCallback("tab",					ui_events.TAB_CHANGED,		self.OnTabChange)
	self:AddCallback("btn_advanced_graphic",ui_events.BUTTON_CLICKED,	self.OnBtnAdvGraphic)
	self:AddCallback("btn_advanced_graphic",ui_events.STATIC_FOCUS_RECEIVED, self.HintRefresh)		
	self:AddCallback("btn_accept",			ui_events.BUTTON_CLICKED,	self.OnBtnAccept)
	self:AddCallback("btn_accept",			ui_events.STATIC_FOCUS_RECEIVED, self.HintRefresh)	
	self:AddCallback("btn_cancel",			ui_events.BUTTON_CLICKED,	self.OnBtnCancel)
	self:AddCallback("btn_cancel",			ui_events.STATIC_FOCUS_RECEIVED, self.HintRefresh)	
	self:AddCallback("btn_default_graphic",	ui_events.BUTTON_CLICKED,	self.OnBtnDefGraph)
	self:AddCallback("btn_default_graphic",	ui_events.STATIC_FOCUS_RECEIVED, self.HintRefresh)	
	self:AddCallback("btn_default_sound",	ui_events.BUTTON_CLICKED,	self.OnBtnDefSound)	
	self:AddCallback("btn_default_sound",	ui_events.STATIC_FOCUS_RECEIVED, self.HintRefresh)	
	self:AddCallback("combo_preset",		ui_events.LIST_ITEM_SELECT,	self.OnPresetChanged)	
	self:AddCallback("btn_simply_graphic",	ui_events.BUTTON_CLICKED,	self.OnSimplyGraphic)
	self:AddCallback("btn_simply_graphic",	ui_events.STATIC_FOCUS_RECEIVED, self.HintRefresh)	
	self:AddCallback("btn_keyb_default",	ui_events.BUTTON_CLICKED,	self.OnBtnDefault)
end

function options_dialog:HintRefresh()
	hint_name:SetText(game.translate_string("hint_string1"))
	if current_view == 1 then
		hint_caption:SetText(game.translate_string("hint_string2"))
	else
		hint_caption:SetText(game.translate_string("hint_string3"))
	end
end

function options_dialog:OnBtnDefault()
--	cmd("cfg_load default_controls")
	cmd("unbindall")

	local opt				= COptionsManager()
	opt:SetCurrentValues	("mm_opt_controls")
	opt:SetCurrentValues	("key_binding")
end

function options_dialog:OnPresetChanged()	
	local opt					= COptionsManager()
	opt:SetCurrentValues		("mm_opt_video")
	opt:SetCurrentValues		("mm_opt_video_adv")
end

function options_dialog:OnR2changed()	

	self:UpdateDependControls()
	
	if false==self.b_r2_restart_shown then
		self.b_r2_restart_shown			 = true
		self.message_box:Init			("message_box_restart_game")
		self:GetHolder():start_stop_menu(self.message_box,true)
	end
	
end

function options_dialog:OnBtnDefGraph()
	local opt = COptionsManager()
	opt:SendMessage2Group("mm_opt_video","set_default_value")
end

function options_dialog:OnBtnDefSound()	
	local opt = COptionsManager()
	opt:SendMessage2Group("mm_opt_sound","set_default_value")
end

function options_dialog:OnBtnAccept()
	local opt = COptionsManager()
	local console = get_console()
	
	opt:SaveValues("mm_opt_video_preset")
	opt:SaveValues("key_binding")
	opt:SaveValues("mm_opt_video")
	opt:SaveValues("mm_opt_video_adv")
	opt:SaveValues("mm_opt_gameplay")
	opt:SaveValues("mm_opt_sound")	
	opt:SaveValues("mm_opt_controls")
	opt:OptionsPostAccept()	

	--opt_wnd:GetHolder():start_stop_menu	(opt_wnd.owner, true) --new(show main window)
	opt_wnd:GetHolder():start_stop_menu	(opt_wnd,true)
	opt_wnd.owner:Show						(true)
	ogse_rebind_key.save_keys() -- сохраняем переназначаемые клавиши, чтобы иметь возможность их после восстановить
	cmd("cfg_save") -- сохраняем файл настроек на диск
	set_static_rescale_factor(device().height / device().width / 0.75)
end

function options_dialog:OnBtnCancel()
	local opt = COptionsManager()
	opt:UndoGroup("mm_opt_video_preset")
	opt:UndoGroup("mm_opt_video")
	opt:UndoGroup("mm_opt_video_adv")
	opt:UndoGroup("mm_opt_sound")
	opt:OptionsPostAccept()
	
	--opt_wnd:GetHolder():start_stop_menu	(opt_wnd.owner, true) --new(show main window)
	opt_wnd:GetHolder():start_stop_menu	(opt_wnd,true)
	opt_wnd.owner:Show						(true)
end

function options_dialog:OnTabChange()
	opt_wnd.dlg_video:Show		(false)
	opt_wnd.dlg_sound:Show		(false)
	opt_wnd.dlg_gameplay:Show	(false)
	opt_wnd.dlg_controls:Show	(false)
	opt_wnd.dlg_video_adv:Show	(false)
	
	opt_wnd.HintRefresh()
	
	local i = opt_wnd.tab:GetActiveIndex()
	if i == 0 then
		opt_wnd.dlg_video:Show(true)		
	elseif i == 1 then
		opt_wnd.dlg_sound:Show(true)
	elseif i == 2 then
		opt_wnd.dlg_gameplay:Show(true)
	elseif i == 3 then
		opt_wnd.dlg_controls:Show(true)
	end
end

function options_dialog:OnBtnAdvGraphic()
	opt_wnd.dlg_video:Show		(false)
	opt_wnd.dlg_video_adv:Show	(true)
	current_view = 2
	opt_wnd:HintRefresh()
end

function options_dialog:OnSimplyGraphic()
	opt_wnd.dlg_video:Show		(true)
	opt_wnd.dlg_video_adv:Show	(false)
	current_view = 1
	opt_wnd:HintRefresh()
end

function options_dialog:OnKeyboard(dik, keyboard_action)
	if CUIScriptWnd.OnKeyboard(self,dik,keyboard_action) then return true end
	
	if keyboard_action == ui_events.WINDOW_KEY_PRESSED then
		if dik == DIK_keys.DIK_ESCAPE then
			if self.dlg_video_adv:IsShown() then
				self.dlg_video_adv:Show	(false)
				self.dlg_video:Show		(true)
			else
				--self:GetHolder():start_stop_menu	(self.owner, true) --new(show main window)
				self:GetHolder():start_stop_menu	(self,true)
				self.owner:Show						(true)
			end
			return true
		end	
	end
	return false
end
